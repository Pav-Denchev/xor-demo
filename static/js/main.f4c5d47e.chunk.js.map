{"version":3,"sources":["letterCell.js","LetterRow.js","textLayer.js","AppContainer.js","App.js","reportWebVitals.js","index.js"],"names":["LetterCell","_React$Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","inherits","createClass","key","value","react_default","a","createElement","style","width","height","display","justifyContent","alignItems","color","opacity","fontSize","col","React","Component","LetterRow","_this2","flexDirection","row","map","letter","index","letterCell_LetterCell","TextLayer","flexWrap","className","letters","letterRow","LetterRow_LetterRow","_regeneratorRuntime","exports","Op","prototype","hasOwn","hasOwnProperty","defineProperty","obj","desc","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","AppContainer","handleOpacityChange","rgb","setState","handleOpacityInputChange","event","inputValue","parseInt","target","r","g","b","selectInputValue","field","select","getRandomLetters","j","getRandomLetter","rgbToGrayscale","calcAbsolutePixel","pixel","pixel1","pixel2","Math","abs","blockCellsBelowThreshhold","asyncToGenerator","_callee2","_context2","_ref2","_callee","imageHtml","image1Html","image2Html","imageBase64","image1Base64","image2Base64","imageUrls","_context","document","querySelector","htmlToImage","quality","all","e","img","Image","onload","onerror","src","minPixelsBelowThreshhold","image","image1","image2","newLetters","Array","h","canvas","canvas1","canvas2","getContext","context1","context2","drawImage","imageData","getImageData","imageData1","imageData2","currRowPxCount","currColPxCount","belowThreshhold","pixelsBelowThreshhold","darkestPixel","x","y","grayscale","m","round","n","getPx","absPixel","threshhold","console","log","_x","_x2","apply","arguments","str32","val32","Uint32Array","data","buffer","toString","substr","String","fromCharCode","floor","random","fileChangedHandler","bind","assertThisInitialized","backgroundImage","loading","imageLoaded","opacityInputValue","hex","prevProps","prevState","fileInput","files","Resizer","imageFileResizer","uri","_this3","position","paddingTop","paddingBottom","backgroundColor","zIndex","top","left","transform","CircularProgress","marginBottom","id","onChange","alt","textLayer_TextLayer","concat","marginTop","react_color_es","s","l","marginLeft","TextField","inputProps","min","max","step","onFocus","onClick","margin","label","variant","onBlur","disableAlpha","onChangeComplete","Button","marginRight","_callee3","_context3","disabled","App","AppContainer_AppContainer","reportWebVitals","onPerfEntry","Function","__webpack_require__","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"0QAEaA,EAAU,SAAAC,GACnB,SAAAD,EAAYE,GAAO,IAAAC,EAGb,OAHaC,OAAAC,EAAA,EAAAD,CAAAE,KAAAN,IACfG,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAJ,GAAAS,KAAAH,KAAMJ,KACDQ,MAAQ,GACXP,EAUL,OAdkBC,OAAAO,EAAA,EAAAP,CAAAJ,EAAAC,GAKlBG,OAAAQ,EAAA,EAAAR,CAAAJ,EAAA,EAAAa,IAAA,SAAAC,MAAA,WAGG,OACIC,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAAEC,MAAO,sBAAuBC,OAAQ,sBAAuBC,QAAS,OAAQC,eAAgB,SAAUC,WAAY,WAC9HR,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAAEM,MAAOlB,KAAKJ,MAAMsB,MAAOC,QAASnB,KAAKJ,MAAMuB,QAASC,SAAU,SAAWpB,KAAKJ,MAAMyB,UAI/G3B,EAdkB,CAAS4B,IAAMC,WCCzBC,EAAS,SAAA7B,GAClB,SAAA6B,EAAY5B,GAAO,IAAAC,EAGb,OAHaC,OAAAC,EAAA,EAAAD,CAAAE,KAAAwB,IACf3B,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA0B,GAAArB,KAAAH,KAAMJ,KACDQ,MAAQ,GACXP,EAWL,OAfiBC,OAAAO,EAAA,EAAAP,CAAA0B,EAAA7B,GAKjBG,OAAAQ,EAAA,EAAAR,CAAA0B,EAAA,EAAAjB,IAAA,SAAAC,MAAA,WAEQ,IAAAiB,EAAAzB,KACL,OACIS,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAACC,MAAO,SAAUC,OAAO,sBAAuBC,QAAS,OAAQW,cAAe,QACvF1B,KAAKJ,MAAM+B,KAAO3B,KAAKJ,MAAM+B,IAAIC,IAAK,SAACC,EAAQC,GAC5C,OAAOrB,EAAAC,EAAAC,cAACoB,EAAU,CAACb,MAAOO,EAAK7B,MAAMsB,MAAOG,IAAKQ,EAAQtB,IAAKuB,EAAOX,QAASM,EAAK7B,MAAMuB,iBAIxGK,EAfiB,CAASF,IAAMC,WCAxBS,EAAS,SAAArC,GAClB,SAAAqC,EAAYpC,GAAO,IAAAC,EAGb,OAHaC,OAAAC,EAAA,EAAAD,CAAAE,KAAAgC,IACfnC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAkC,GAAA7B,KAAAH,KAAMJ,KACDQ,MAAQ,GACXP,EAWL,OAfiBC,OAAAO,EAAA,EAAAP,CAAAkC,EAAArC,GAKjBG,OAAAQ,EAAA,EAAAR,CAAAkC,EAAA,EAAAzB,IAAA,SAAAC,MAAA,WAEQ,IAAAiB,EAAAzB,KACL,OACIS,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAACG,QAAS,OAASW,cAAe,SAAUO,SAAU,OAAQpB,MAAO,OAAQC,OAAQ,QAASoB,UAAU,iBAC/GlC,KAAKJ,MAAMuC,SAAWnC,KAAKJ,MAAMuC,QAAQP,IAAK,SAACQ,EAAWN,GACvD,OAAOrB,EAAAC,EAAAC,cAAC0B,EAAS,CAACnB,MAAOO,EAAK7B,MAAMsB,MAAOS,IAAKS,EAAW7B,IAAKuB,EAAOX,QAASM,EAAK7B,MAAMuB,iBAI1Ga,EAfiB,CAASV,IAAMC,qFCFrCe,EAAA,kBAAAC,GAAA,IAAAA,EAAA,GAAAC,EAAA1C,OAAA2C,UAAAC,EAAAF,EAAAG,eAAAC,EAAA9C,OAAA8C,gBAAA,SAAAC,EAAAtC,EAAAuC,GAAAD,EAAAtC,GAAAuC,EAAAtC,OAAAuC,EAAA,mBAAAC,cAAA,GAAAC,EAAAF,EAAAG,UAAA,aAAAC,EAAAJ,EAAAK,eAAA,kBAAAC,EAAAN,EAAAO,aAAA,yBAAAC,EAAAV,EAAAtC,EAAAC,GAAA,OAAAV,OAAA8C,eAAAC,EAAAtC,EAAA,CAAAC,QAAAgD,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAb,EAAAtC,GAAA,IAAAgD,EAAA,aAAAI,GAAAJ,EAAA,SAAAV,EAAAtC,EAAAC,GAAA,OAAAqC,EAAAtC,GAAAC,GAAA,SAAAoD,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,KAAArB,qBAAAyB,EAAAJ,EAAAI,EAAAC,EAAArE,OAAAsE,OAAAH,EAAAxB,WAAA4B,EAAA,IAAAC,EAAAN,GAAA,WAAApB,EAAAuB,EAAA,WAAA3D,MAAA+D,EAAAV,EAAAE,EAAAM,KAAAF,EAAA,SAAAK,EAAAC,EAAA5B,EAAA6B,GAAA,WAAAC,KAAA,SAAAD,IAAAD,EAAAtE,KAAA0C,EAAA6B,IAAA,MAAAf,GAAA,OAAAgB,KAAA,QAAAD,IAAAf,IAAApB,EAAAqB,OAAA,IAAAgB,EAAA,YAAAV,KAAA,SAAAW,KAAA,SAAAC,KAAA,IAAAC,EAAA,GAAAxB,EAAAwB,EAAA9B,EAAA,kBAAAjD,OAAA,IAAAgF,EAAAlF,OAAAI,eAAA+E,EAAAD,OAAAE,EAAA,MAAAD,OAAAzC,GAAAE,EAAAvC,KAAA8E,EAAAhC,KAAA8B,EAAAE,GAAA,IAAAE,EAAAL,EAAArC,UAAAyB,EAAAzB,UAAA3C,OAAAsE,OAAAW,GAAA,SAAAK,EAAA3C,GAAA,0BAAA4C,QAAA,SAAAC,GAAA/B,EAAAd,EAAA6C,EAAA,SAAAZ,GAAA,OAAA1E,KAAAuF,QAAAD,EAAAZ,OAAA,SAAAc,EAAArB,EAAAsB,GAAA,IAAAC,EAAA9C,EAAA5C,KAAA,WAAAQ,MAAA,SAAA8E,EAAAZ,GAAA,SAAAiB,IAAA,WAAAF,EAAA,SAAAG,EAAAC,IAAA,SAAAC,EAAAR,EAAAZ,EAAAkB,EAAAC,GAAA,IAAAE,EAAAvB,EAAAL,EAAAmB,GAAAnB,EAAAO,GAAA,aAAAqB,EAAApB,KAAA,KAAAqB,EAAAD,EAAArB,IAAAlE,EAAAwF,EAAAxF,MAAA,OAAAA,GAAA,iBAAAA,GAAAkC,EAAAvC,KAAAK,EAAA,WAAAiF,EAAAG,QAAApF,EAAAyF,SAAAC,KAAA,SAAA1F,GAAAsF,EAAA,OAAAtF,EAAAoF,EAAAC,IAAA,SAAAlC,GAAAmC,EAAA,QAAAnC,EAAAiC,EAAAC,KAAAJ,EAAAG,QAAApF,GAAA0F,KAAA,SAAAC,GAAAH,EAAAxF,MAAA2F,EAAAP,EAAAI,IAAA,SAAAI,GAAA,OAAAN,EAAA,QAAAM,EAAAR,EAAAC,OAAAE,EAAArB,KAAAoB,CAAAR,EAAAZ,EAAAkB,EAAAC,KAAA,OAAAH,MAAAQ,KAAAP,YAAA,SAAApB,EAAAV,EAAAE,EAAAM,GAAA,IAAAjE,EAAA,iCAAAkF,EAAAZ,GAAA,iBAAAtE,EAAA,UAAAiG,MAAA,iDAAAjG,EAAA,cAAAkF,EAAA,MAAAZ,EAAA,OAAA4B,IAAA,IAAAjC,EAAAiB,SAAAjB,EAAAK,QAAA,KAAA6B,EAAAlC,EAAAkC,SAAA,GAAAA,EAAA,KAAAC,EAAAC,EAAAF,EAAAlC,GAAA,GAAAmC,EAAA,IAAAA,IAAA5B,EAAA,gBAAA4B,GAAA,YAAAnC,EAAAiB,OAAAjB,EAAAqC,KAAArC,EAAAsC,MAAAtC,EAAAK,SAAA,aAAAL,EAAAiB,OAAA,uBAAAlF,EAAA,MAAAA,EAAA,YAAAiE,EAAAK,IAAAL,EAAAuC,kBAAAvC,EAAAK,SAAA,WAAAL,EAAAiB,QAAAjB,EAAAwC,OAAA,SAAAxC,EAAAK,KAAAtE,EAAA,gBAAA2F,EAAAvB,EAAAX,EAAAE,EAAAM,GAAA,cAAA0B,EAAApB,KAAA,IAAAvE,EAAAiE,EAAAyC,KAAA,6BAAAf,EAAArB,MAAAE,EAAA,gBAAApE,MAAAuF,EAAArB,IAAAoC,KAAAzC,EAAAyC,MAAA,UAAAf,EAAApB,OAAAvE,EAAA,YAAAiE,EAAAiB,OAAA,QAAAjB,EAAAK,IAAAqB,EAAArB,OAAA,SAAA+B,EAAAF,EAAAlC,GAAA,IAAA0C,EAAA1C,EAAAiB,SAAAiB,EAAArD,SAAA6D,GAAA,QAAAC,IAAA1B,EAAA,OAAAjB,EAAAkC,SAAA,eAAAQ,GAAAR,EAAArD,SAAA+D,SAAA5C,EAAAiB,OAAA,SAAAjB,EAAAK,SAAAsC,EAAAP,EAAAF,EAAAlC,GAAA,UAAAA,EAAAiB,SAAA,WAAAyB,IAAA1C,EAAAiB,OAAA,QAAAjB,EAAAK,IAAA,IAAAwC,UAAA,oCAAAH,EAAA,aAAAnC,EAAA,IAAAmB,EAAAvB,EAAAc,EAAAiB,EAAArD,SAAAmB,EAAAK,KAAA,aAAAqB,EAAApB,KAAA,OAAAN,EAAAiB,OAAA,QAAAjB,EAAAK,IAAAqB,EAAArB,IAAAL,EAAAkC,SAAA,KAAA3B,EAAA,IAAAuC,EAAApB,EAAArB,IAAA,OAAAyC,IAAAL,MAAAzC,EAAAkC,EAAAa,YAAAD,EAAA3G,MAAA6D,EAAAgD,KAAAd,EAAAe,QAAA,WAAAjD,EAAAiB,SAAAjB,EAAAiB,OAAA,OAAAjB,EAAAK,SAAAsC,GAAA3C,EAAAkC,SAAA,KAAA3B,GAAAuC,GAAA9C,EAAAiB,OAAA,QAAAjB,EAAAK,IAAA,IAAAwC,UAAA,oCAAA7C,EAAAkC,SAAA,KAAA3B,GAAA,SAAA2C,EAAAC,GAAA,IAAAC,EAAA,CAAAC,OAAAF,EAAA,SAAAA,IAAAC,EAAAE,SAAAH,EAAA,SAAAA,IAAAC,EAAAG,WAAAJ,EAAA,GAAAC,EAAAI,SAAAL,EAAA,IAAAxH,KAAA8H,WAAAC,KAAAN,GAAA,SAAAO,EAAAP,GAAA,IAAA1B,EAAA0B,EAAAQ,YAAA,GAAAlC,EAAApB,KAAA,gBAAAoB,EAAArB,IAAA+C,EAAAQ,WAAAlC,EAAA,SAAAzB,EAAAN,GAAAhE,KAAA8H,WAAA,EAAAJ,OAAA,SAAA1D,EAAAqB,QAAAkC,EAAAvH,WAAAkI,OAAA,YAAAhD,EAAAiD,GAAA,GAAAA,EAAA,KAAAC,EAAAD,EAAAlF,GAAA,GAAAmF,EAAA,OAAAA,EAAAjI,KAAAgI,GAAA,sBAAAA,EAAAd,KAAA,OAAAc,EAAA,IAAAE,MAAAF,EAAAG,QAAA,KAAAC,GAAA,EAAAlB,EAAA,SAAAA,IAAA,OAAAkB,EAAAJ,EAAAG,QAAA,GAAA5F,EAAAvC,KAAAgI,EAAAI,GAAA,OAAAlB,EAAA7G,MAAA2H,EAAAI,GAAAlB,EAAAP,MAAA,EAAAO,EAAA,OAAAA,EAAA7G,WAAAwG,EAAAK,EAAAP,MAAA,EAAAO,GAAA,OAAAA,UAAA,OAAAA,KAAAf,GAAA,SAAAA,IAAA,OAAA9F,WAAAwG,EAAAF,MAAA,UAAAjC,EAAApC,UAAAqC,EAAAlC,EAAAuC,EAAA,eAAA3E,MAAAsE,EAAArB,cAAA,IAAAb,EAAAkC,EAAA,eAAAtE,MAAAqE,EAAApB,cAAA,IAAAoB,EAAA2D,YAAAjF,EAAAuB,EAAAzB,EAAA,qBAAAd,EAAAkG,oBAAA,SAAAC,GAAA,IAAAC,EAAA,mBAAAD,KAAAE,YAAA,QAAAD,QAAA9D,GAAA,uBAAA8D,EAAAH,aAAAG,EAAAE,QAAAtG,EAAAuG,KAAA,SAAAJ,GAAA,OAAA5I,OAAAiJ,eAAAjJ,OAAAiJ,eAAAL,EAAA5D,IAAA4D,EAAAM,UAAAlE,EAAAvB,EAAAmF,EAAArF,EAAA,sBAAAqF,EAAAjG,UAAA3C,OAAAsE,OAAAe,GAAAuD,GAAAnG,EAAA0G,MAAA,SAAAvE,GAAA,OAAAuB,QAAAvB,IAAAU,EAAAI,EAAA/C,WAAAc,EAAAiC,EAAA/C,UAAAU,EAAA,kBAAAnD,OAAAuC,EAAAiD,gBAAAjD,EAAA2G,MAAA,SAAArF,EAAAC,EAAAC,EAAAC,EAAAyB,QAAA,IAAAA,MAAA0D,SAAA,IAAAC,EAAA,IAAA5D,EAAA5B,EAAAC,EAAAC,EAAAC,EAAAC,GAAAyB,GAAA,OAAAlD,EAAAkG,oBAAA3E,GAAAsF,IAAA/B,OAAAnB,KAAA,SAAAF,GAAA,OAAAA,EAAAc,KAAAd,EAAAxF,MAAA4I,EAAA/B,UAAAjC,EAAAD,GAAA5B,EAAA4B,EAAA9B,EAAA,aAAAE,EAAA4B,EAAAlC,EAAA,kBAAAjD,OAAAuD,EAAA4B,EAAA,mDAAA5C,EAAA8G,KAAA,SAAAC,GAAA,IAAAC,EAAAzJ,OAAAwJ,GAAAD,EAAA,WAAA9I,KAAAgJ,EAAAF,EAAAtB,KAAAxH,GAAA,OAAA8I,EAAAG,UAAA,SAAAnC,IAAA,KAAAgC,EAAAf,QAAA,KAAA/H,EAAA8I,EAAAI,MAAA,GAAAlJ,KAAAgJ,EAAA,OAAAlC,EAAA7G,MAAAD,EAAA8G,EAAAP,MAAA,EAAAO,EAAA,OAAAA,EAAAP,MAAA,EAAAO,IAAA9E,EAAA2C,SAAAZ,EAAA7B,UAAA,CAAAmG,YAAAtE,EAAA4D,MAAA,SAAAwB,GAAA,GAAA1J,KAAA2J,KAAA,EAAA3J,KAAAqH,KAAA,EAAArH,KAAA0G,KAAA1G,KAAA2G,WAAAK,EAAAhH,KAAA8G,MAAA,EAAA9G,KAAAuG,SAAA,KAAAvG,KAAAsF,OAAA,OAAAtF,KAAA0E,SAAAsC,EAAAhH,KAAA8H,WAAAzC,QAAA2C,IAAA0B,EAAA,QAAAb,KAAA7I,KAAA,MAAA6I,EAAAe,OAAA,IAAAlH,EAAAvC,KAAAH,KAAA6I,KAAAR,OAAAQ,EAAAgB,MAAA,MAAA7J,KAAA6I,QAAA7B,IAAA8C,KAAA,WAAA9J,KAAA8G,MAAA,MAAAiD,EAAA/J,KAAA8H,WAAA,GAAAG,WAAA,aAAA8B,EAAApF,KAAA,MAAAoF,EAAArF,IAAA,OAAA1E,KAAAgK,MAAApD,kBAAA,SAAAqD,GAAA,GAAAjK,KAAA8G,KAAA,MAAAmD,EAAA,IAAA5F,EAAArE,KAAA,SAAAkK,EAAAC,EAAAC,GAAA,OAAArE,EAAApB,KAAA,QAAAoB,EAAArB,IAAAuF,EAAA5F,EAAAgD,KAAA8C,EAAAC,IAAA/F,EAAAiB,OAAA,OAAAjB,EAAAK,SAAAsC,KAAAoD,EAAA,QAAA7B,EAAAvI,KAAA8H,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAAzH,KAAA8H,WAAAS,GAAAxC,EAAA0B,EAAAQ,WAAA,YAAAR,EAAAC,OAAA,OAAAwC,EAAA,UAAAzC,EAAAC,QAAA1H,KAAA2J,KAAA,KAAAU,EAAA3H,EAAAvC,KAAAsH,EAAA,YAAA6C,EAAA5H,EAAAvC,KAAAsH,EAAA,iBAAA4C,GAAAC,EAAA,IAAAtK,KAAA2J,KAAAlC,EAAAE,SAAA,OAAAuC,EAAAzC,EAAAE,UAAA,MAAA3H,KAAA2J,KAAAlC,EAAAG,WAAA,OAAAsC,EAAAzC,EAAAG,iBAAA,GAAAyC,GAAA,GAAArK,KAAA2J,KAAAlC,EAAAE,SAAA,OAAAuC,EAAAzC,EAAAE,UAAA,YAAA2C,EAAA,UAAAjE,MAAA,6CAAArG,KAAA2J,KAAAlC,EAAAG,WAAA,OAAAsC,EAAAzC,EAAAG,gBAAAf,OAAA,SAAAlC,EAAAD,GAAA,QAAA6D,EAAAvI,KAAA8H,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAAzH,KAAA8H,WAAAS,GAAA,GAAAd,EAAAC,QAAA1H,KAAA2J,MAAAjH,EAAAvC,KAAAsH,EAAA,eAAAzH,KAAA2J,KAAAlC,EAAAG,WAAA,KAAA2C,EAAA9C,EAAA,OAAA8C,IAAA,UAAA5F,GAAA,aAAAA,IAAA4F,EAAA7C,QAAAhD,MAAA6F,EAAA3C,aAAA2C,EAAA,UAAAxE,EAAAwE,IAAAtC,WAAA,UAAAlC,EAAApB,OAAAoB,EAAArB,MAAA6F,GAAAvK,KAAAsF,OAAA,OAAAtF,KAAAqH,KAAAkD,EAAA3C,WAAAhD,GAAA5E,KAAAwK,SAAAzE,IAAAyE,SAAA,SAAAzE,EAAA8B,GAAA,aAAA9B,EAAApB,KAAA,MAAAoB,EAAArB,IAAA,gBAAAqB,EAAApB,MAAA,aAAAoB,EAAApB,KAAA3E,KAAAqH,KAAAtB,EAAArB,IAAA,WAAAqB,EAAApB,MAAA3E,KAAAgK,KAAAhK,KAAA0E,IAAAqB,EAAArB,IAAA1E,KAAAsF,OAAA,SAAAtF,KAAAqH,KAAA,kBAAAtB,EAAApB,MAAAkD,IAAA7H,KAAAqH,KAAAQ,GAAAjD,GAAA6F,OAAA,SAAA7C,GAAA,QAAAW,EAAAvI,KAAA8H,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAAzH,KAAA8H,WAAAS,GAAA,GAAAd,EAAAG,eAAA,OAAA5H,KAAAwK,SAAA/C,EAAAQ,WAAAR,EAAAI,UAAAG,EAAAP,GAAA7C,IAAA8F,MAAA,SAAAhD,GAAA,QAAAa,EAAAvI,KAAA8H,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAAzH,KAAA8H,WAAAS,GAAA,GAAAd,EAAAC,WAAA,KAAA3B,EAAA0B,EAAAQ,WAAA,aAAAlC,EAAApB,KAAA,KAAAgG,EAAA5E,EAAArB,IAAAsD,EAAAP,GAAA,OAAAkD,GAAA,UAAAtE,MAAA,0BAAAuE,cAAA,SAAAzC,EAAAf,EAAAE,GAAA,OAAAtH,KAAAuG,SAAA,CAAArD,SAAAgC,EAAAiD,GAAAf,aAAAE,WAAA,SAAAtH,KAAAsF,SAAAtF,KAAA0E,SAAAsC,GAAApC,IAAArC,EAQO,IAAMsI,EAAY,SAAAlL,GAErB,SAAAkL,EAAYjL,GAAO,IAAAC,EAab,OAbaC,OAAAC,EAAA,EAAAD,CAAAE,KAAA6K,IACfhL,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA+K,GAAA1K,KAAAH,KAAMJ,KA0BVkL,oBAAsB,SAACtK,GACnB,IAAMW,EAAUX,EAAMuK,IAAIrK,EAC1Bb,EAAKmL,SAAS,CAAE7J,aACnBtB,EAEDoL,yBAA2B,SAACC,GACxB,IAAMC,EAAaC,SAASF,EAAMG,OAAO7K,OAErC2K,EAAa,GAAKA,EAAa,KAAO9C,MAAM8C,IAIhDtL,EAAKiL,oBAAoB,CAAEC,IAAK,CAAEO,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAG9K,EAAGyK,EAAa,QACvEtL,EAED4L,iBAAmB,SAACC,GAChBA,EAAML,OAAOM,UAChB9L,EAED+L,iBAAmB,WAEf,IADA,IAAMzJ,EAAU,GACPoG,EAAI,EAAGA,EAAI,GAAIA,IAAK,CAEzB,IADA,IAAM5G,EAAM,GACHkK,EAAI,EAAGA,EAAI,GAAIA,IACpBlK,EAAIoG,KAAKlI,EAAKiM,mBAElB3J,EAAQ4F,KAAKpG,GAEjB,OAAOQ,GACVtC,EAEDkM,eAAiB,SAACT,EAAGC,EAAGC,GACpB,MAAO,MAASF,EAAI,MAASC,EAAI,MAASC,GAC7C3L,EAEDmM,kBAAoB,SAACC,EAAOC,EAAQC,GAKhC,MAAO,CACHb,EALSc,KAAKC,IAAID,KAAKC,IAAIJ,EAAMX,EAAIY,EAAOZ,GAAKa,EAAOb,GAMxDC,EALSa,KAAKC,IAAID,KAAKC,IAAIJ,EAAMV,EAAIW,EAAOX,GAAKY,EAAOZ,GAMxDC,EALSY,KAAKC,IAAID,KAAKC,IAAIJ,EAAMT,EAAIU,EAAOV,GAAKW,EAAOX,KAO/D3L,EAEDyM,0BAAyBxM,OAAAyM,EAAA,EAAAzM,CAAAwC,IAAAwG,KAAG,SAAA0D,IAAA,OAAAlK,IAAAsB,KAAA,SAAA6I,GAAA,cAAAA,EAAA9C,KAAA8C,EAAApF,MAAA,cAAAoF,EAAA5F,OAAA,SACjB,IAAIsC,QAAO,eAAAuD,EAAA5M,OAAAyM,EAAA,EAAAzM,CAAAwC,IAAAwG,KAAC,SAAA6D,EAAO/G,EAASC,GAAM,IAAA+G,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAA5K,IAAAsB,KAAA,SAAAuJ,GAAA,cAAAA,EAAAxD,KAAAwD,EAAA9F,MAAA,OAGe,OAF9CuF,EAAYQ,SAASC,cAAc,UACnCR,EAAaO,SAASC,cAAc,WACpCP,EAAaM,SAASC,cAAc,WAAUF,EAAA9F,KAAA,EAE1BiG,IAAkBV,EAAW,CAAEW,QAAS,IAAI,OAArD,OAAXR,EAAWI,EAAAzG,KAAAyG,EAAA9F,KAAA,EACUiG,IAAkBT,EAAY,CAAEU,QAAS,IAAI,OAAtD,OAAZP,EAAYG,EAAAzG,KAAAyG,EAAA9F,KAAA,GACSiG,IAAkBR,EAAY,CAAES,QAAS,IAAI,QAAlEN,EAAYE,EAAAzG,KAEZwG,EAAY,CAACH,EAAaC,EAAcC,GAE9C9D,QAAQqE,IAAIN,EAAUtL,IAAI,SAAA6L,GAAC,OACvB,IAAItE,QAAQ,SAACvD,EAASC,GAClB,IAAM6H,EAAM,IAAIC,MAChBD,EAAIE,OAAS,kBAAMhI,EAAQ8H,IAC3BA,EAAIG,QAAUhI,EACd6H,EAAII,IAAML,OAEfvH,KAAK,SAACF,GAKL,IAJA,IAOI+H,EAPEC,EAAQhI,EAAO,GACfiI,EAASjI,EAAO,GAChBkI,EAASlI,EAAO,GAClBmI,EAAa,IAAIC,MAAM,IAClBC,EAAI,EAAGA,EAAIF,EAAW7F,OAAQ+F,IACnCF,EAAWE,GAAK,IAAID,MAAM,IAM1BL,EAHClO,EAAKO,MAAM2N,yBAGelO,EAAKO,MAAM2N,yBAFX,EAI/B,IAMMO,EAASlB,SAASzM,cAAc,UAChC4N,EAAUnB,SAASzM,cAAc,UACjC6N,EAAUpB,SAASzM,cAAc,UAEvC2N,EAAOzN,MATO,IAUdyN,EAAOxN,OAXQ,KAafyN,EAAQ1N,MAZM,IAad0N,EAAQzN,OAdO,KAgBf0N,EAAQ3N,MAfM,IAgBd2N,EAAQ1N,OAjBO,KAmBf,IAAMuD,EAAUiK,EAAOG,WAAW,MAC5BC,EAAWH,EAAQE,WAAW,MAC9BE,EAAWH,EAAQC,WAAW,MAEpCpK,EAAQuK,UAAUZ,EAAO,EAAG,EAtBd,IADC,MAwBfU,EAASE,UAAUX,EAAQ,EAAG,EAvBhB,IADC,MAyBfU,EAASC,UAAUV,EAAQ,EAAG,EAxBhB,IADC,MAkCf,IAPA,IAAMW,EAAYxK,EAAQyK,aAAa,EAAG,EAAGR,EAAOzN,MAAOyN,EAAOxN,QAC5DiO,EAAaL,EAASI,aAAa,EAAG,EAAGP,EAAQ1N,MAAO0N,EAAQzN,QAChEkO,EAAaL,EAASG,aAAa,EAAG,EAAGN,EAAQ3N,MAAO2N,EAAQ1N,QAElEmO,EA7BY,EA8BZC,EA9BY,EAgCPvN,EAAM,EAAGA,EAAM,GAAIA,IAAO,CAC/B,IAAK,IAAIN,EAAM,EAAGA,EAAM,GAAIA,IAAO,CAU/B,IATA,IAAI8N,GAAkB,EAClBC,EAAwB,EACxBC,EAAe,CACf1N,MACAN,MACAiO,EAAGL,EACHM,EAAGL,EACHM,UAAW,KAENC,EAAI,EAAGA,EAAIrD,KAAKsD,MAzCb,IAA0B,IAyCOD,IAAK,CAC9C,IAAK,IAAIE,EAAI,EAAGA,EAAIvD,KAAKsD,MA3ChB,KAA2B,IA2CUC,IAAK,CAC/C,IAAMxD,EAAStM,EAAK+P,MAAMZ,EAAY5C,KAAKsD,MAAMT,EAAiBQ,GAAIrD,KAAKsD,MAAMR,EAAiBS,IAElG,GAAkB,IAAbxD,EAAOb,GAAwB,IAAba,EAAOZ,GAAwB,IAAbY,EAAOX,GAA0B,MAAbW,EAAOb,GAA0B,MAAba,EAAOZ,GAA0B,MAAbY,EAAOX,EAA5G,CAIA,IAAMS,EAAQpM,EAAK+P,MAAMf,EAAWzC,KAAKsD,MAAMT,EAAiBQ,GAAIrD,KAAKsD,MAAMR,EAAiBS,IAC1FzD,EAASrM,EAAK+P,MAAMb,EAAY3C,KAAKsD,MAAMT,EAAiBQ,GAAIrD,KAAKsD,MAAMR,EAAiBS,IAE5FE,EAAWhQ,EAAKmM,kBAAkBC,EAAOC,EAAQC,GAEjDqD,EAAY3P,EAAKkM,eAAe8D,EAASvE,EAAGuE,EAAStE,EAAGsE,EAASrE,GAgBvE,GAdIgE,EAAYH,EAAaG,YACzBH,EAAe,CACX1N,MACAN,MACAiO,EAAGL,EAAiBQ,EACpBF,EAAGL,EAAiBS,EACpBH,cAIJpE,SAASoE,IAAcpE,SAASvL,EAAKO,MAAM0P,aAC3CV,IAGAA,GAAyBrB,EAA0B,CACnDoB,GAAkB,EAClBhB,EAAWxM,GAAKN,GAAO,IACvB,MAEA8M,EAAWxM,GAAKN,GAAOxB,EAAKO,MAAM+B,QAAQR,GAAKN,IAGvD,GAAI8N,EACA,MAGRY,QAAQC,IAAIX,GACZJ,GAnFY,IAA0B,GAqF1CA,EAvFY,EAwFZC,GAvFiB,KAA2B,GAyFhDtJ,EAAQuI,KACTzD,MAAM,WACL7E,MACD,yBAAAsH,EAAArD,SAAA6C,MACN,gBAAAsD,EAAAC,GAAA,OAAAxD,EAAAyD,MAAAnQ,KAAAoQ,YAhIiB,KAgIhB,wBAAA3D,EAAA3C,SAAA0C,MACL3M,EAED+P,MAAQ,SAACf,EAAWS,EAAGC,GACnB,IAEIc,EADAC,EADS,IAAIC,YAAY1B,EAAU2B,KAAKC,QACzBlB,EAAIV,EAAUhO,MAAQyO,GAErC5O,EAAI,EACJ8K,EAAI,EACJD,EAAI,EACJD,EAAI,EAUR,OARIgF,EAAQ,IACRD,EAAQC,EAAMI,SAAS,IACvBhQ,EAAI0K,SAASiF,EAAMM,OAAO,EAAG,GAAI,IACjCnF,EAAIJ,SAASiF,EAAMM,OAAO,EAAG,GAAI,IACjCpF,EAAIH,SAASiF,EAAMM,OAAO,EAAG,GAAI,IACjCrF,EAAIF,SAASiF,EAAMM,OAAO,EAAG,GAAI,KAG9B,CACHrF,EAAGA,EACHC,EAAGA,EACHC,EAAGA,EACH9K,EAAGA,IAEVb,EA+BDiM,gBAAkB,WACd,OAAO8E,OAAOC,aAAazE,KAAK0E,MAAsB,GAAhB1E,KAAK2E,UAAiB,KAnQ5DlR,EAAKmR,mBAAqBnR,EAAKmR,mBAAmBC,KAAKnR,OAAAoR,EAAA,EAAApR,QAAAoR,EAAA,EAAApR,CAAAD,KACvDA,EAAKO,MAAQ,CACT0P,WAAY,EACZ3N,QAAS,GACTgP,gBAAiB,KACjBC,SAAS,EACTC,aAAa,EACblQ,QAAS,EACTmQ,kBAAmB,IACnBpQ,MAAO,CAAEqQ,IAAK,UAAWxG,IAAK,CAAEO,EAAG,EAAGC,EAAG,EAAGC,EAAG,IAC/CuC,yBAA0B,GAC5BlO,EA6XL,OA5YoBC,OAAAO,EAAA,EAAAP,CAAA+K,EAAAlL,GAgBpBG,OAAAQ,EAAA,EAAAR,CAAA+K,EAAA,EAAAtK,IAAA,oBAAAC,MAAA,WAGG,IAAM8Q,EAAoBlF,KAAKsD,MAA2B,IAArB1P,KAAKI,MAAMe,SAChDnB,KAAKgL,SAAS,CAAEsG,wBACnB,CAAA/Q,IAAA,qBAAAC,MAAA,SAEkBgR,EAAWC,GACtBA,EAAUtQ,UAAYnB,KAAKI,MAAMe,SACjCnB,KAAKgL,SAAS,CAAEsG,kBAAmBlF,KAAKsD,MAA2B,IAArB1P,KAAKI,MAAMe,aAEhE,CAAAZ,IAAA,qBAAAC,MAAA,SA8MkB0K,GAAO,IAAAzJ,EAAAzB,KAClB0R,GAAY,EAIhB,GAHIxG,EAAMG,OAAOsG,MAAM,KACnBD,GAAY,GAEZA,EACA,IACIE,IAAQC,iBACJ3G,EAAMG,OAAOsG,MAAM,GACnB,IACA,IACA,OACA,IACA,EACA,SAACG,GACG,IAAM3P,EAAUV,EAAKmK,mBACrBnK,EAAKuJ,SAAS,CAAEmG,gBAAiBW,EAAK3P,QAASA,KAEnD,SACA,IACA,KAEJnC,KAAKgL,SAAS,CAAEqG,aAAa,IAC/B,MAAO1N,GACLoM,QAAQC,IAAIrM,MAGvB,CAAApD,IAAA,SAAAC,MAAA,WAMQ,IAAAuR,EAAA/R,KACL,OACIS,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAAEoR,SAAU,WAAYjR,QAAS,OAAQC,eAAgB,SAAUC,WAAY,SAAUJ,MAAO,OAAQC,OAAQ,OAAQY,cAAe,SAAUuQ,WAAY,OAAQC,cAAe,QAAWhQ,UAAU,OAE7MlC,KAAKI,MAAMgR,SACP3Q,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAAEoR,SAAU,WAAYG,gBAAiB,QAASC,OAAQ,IAAKvR,MAAO,OAAQC,OAAQ,SAC9FL,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAAEoR,SAAU,QAASK,IAAK,MAAOC,KAAM,MAAOC,UAAW,0BACjE9R,EAAAC,EAAAC,cAAC6R,EAAA,EAAgB,QAKjC/R,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAAE6R,aAAc,SACxBhS,EAAAC,EAAAC,cAAA,SAAOgE,KAAM,OAAQ+N,GAAI,cAAe7J,KAAM,cAAe8J,SAAU3S,KAAKgR,sBAEhFvQ,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAAEG,QAAS,SACnBN,EAAAC,EAAAC,cAAA,OAAKuB,UAAU,QAAQtB,MAAO,CAAEC,MAAO,SAAUC,OAAQ,SAAUkR,SAAU,aACzEvR,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAAEC,MAAO,OAAQC,OAAQ,OAAQkR,SAAU,aACnDvR,EAAAC,EAAAC,cAAA,OAAKiS,IAAK,GAAIhS,MAAO,CAAEC,MAAO,SAAUC,OAAQ,UAAagN,IAAK9N,KAAKI,MAAM+Q,mBAEjF1Q,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAAEC,MAAO,OAAQC,OAAQ,OAAQkR,SAAU,aACnDvR,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAAEC,MAAO,OAAQC,OAAQ,SACjCL,EAAAC,EAAAC,cAACkS,EAAS,CAAC1Q,QAASnC,KAAKI,MAAM+B,QAASjB,MAAOlB,KAAKI,MAAMc,MAAMqQ,IAAKpQ,QAASnB,KAAKI,MAAMe,aAIrGV,EAAAC,EAAAC,cAAA,OAAKuB,UAAU,SAAStB,MAAO,CAAEC,MAAO,SAAUC,OAAQ,SAAUkR,SAAU,WAAYjR,QAAO,GAAA+R,OAAK9S,KAAKI,MAAMgR,QAAU,QAAU,UACjI3Q,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAAEC,MAAO,OAAQC,OAAQ,OAAQkR,SAAU,aACnDvR,EAAAC,EAAAC,cAAA,OAAKiS,IAAK,GAAIhS,MAAO,CAAEC,MAAO,SAAUC,OAAQ,UAAagN,IAAK9N,KAAKI,MAAM+Q,mBAEjF1Q,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAAEC,MAAO,OAAQC,OAAQ,OAAQkR,SAAU,aACnDvR,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAAEC,MAAO,OAAQC,OAAQ,SACjCL,EAAAC,EAAAC,cAACkS,EAAS,CAAC1Q,QAASnC,KAAKI,MAAM+B,aAI3C1B,EAAAC,EAAAC,cAAA,OAAKuB,UAAU,SAAStB,MAAO,CAAEC,MAAO,SAAUC,OAAQ,SAAUkR,SAAU,WAAYG,gBAAiB,QAASpR,QAAO,GAAA+R,OAAK9S,KAAKI,MAAMgR,QAAU,QAAU,UAC3J3Q,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAAEC,MAAO,OAAQC,OAAQ,OAAQkR,SAAU,aACnDvR,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAAEC,MAAO,OAAQC,OAAQ,SACjCL,EAAAC,EAAAC,cAACkS,EAAS,CAAC1Q,QAASnC,KAAKI,MAAM+B,cAK/C1B,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAAEG,QAAS,OAAQE,WAAY,SAAUJ,MAAO,MAAOkS,UAAW,SAC1EtS,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAAEoR,SAAU,WAAYnR,MAAO,QAASC,OAAQ,SACxDL,EAAAC,EAAAC,cAACqS,EAAA,EAAW,CACR9R,MAAO,CAAEmN,EAAG,IAAK4E,EAAG,EAAGC,EAAG,GAAKxS,EAAGV,KAAKI,MAAMe,SAC7CwR,SAAU,SAACnS,GACPuR,EAAKjH,oBAAoBtK,OAIrCC,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAAEG,QAAS,OAAQE,WAAY,SAAUkS,WAAY,KAC7D1S,EAAAC,EAAAC,cAACyS,EAAA,EAAS,CACNxS,MAAO,CAAEC,MAAO,QAChB8D,KAAK,SACLnE,MAAOR,KAAKI,MAAMkR,kBAClB+B,WAAY,CAAEC,IAAK,IAAKC,IAAK,MAAOC,KAAM,KAC1Cb,SAAU3S,KAAKiL,yBACfwI,QAASzT,KAAKyL,iBACdiI,QAAS1T,KAAKyL,mBAElBhL,EAAAC,EAAAC,cAAA,QAAMC,MAAO,CAAEuS,WAAY,KAAM,OAGzC1S,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAAEG,QAAS,OAAQE,WAAY,SAAU8R,UAAW,OAAQN,aAAc,SAClFhS,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAAEG,QAAS,OAAQW,cAAe,SAAUT,WAAY,WAChER,EAAAC,EAAAC,cAACyS,EAAA,EAAS,CACNO,OAAO,SACPhP,KAAK,SACL+N,GAAG,iBACHkB,MAAM,aACNC,QAAQ,WACRrT,MAAOR,KAAKI,MAAM0P,WAClB6C,SAAU,SAACzH,GACHA,EAAMG,OAAO7K,OAAS,GAAK0K,EAAMG,OAAO7K,OAAS,KACjDuR,EAAK/G,SAAS,CAAE8E,WAAY5E,EAAMG,OAAO7K,WAIrDC,EAAAC,EAAAC,cAACyS,EAAA,EAAS,CACNO,OAAO,SACPhP,KAAK,SACL+N,GAAG,iBACHkB,MAAM,0BACNC,QAAQ,WACRrT,MAAOR,KAAKI,MAAM2N,yBAClB4E,SAAU,SAACzH,IACFA,EAAMG,OAAO7K,MAAQ,GAAK0K,EAAMG,OAAO7K,OAAS,KAA+B,KAAvB0K,EAAMG,OAAO7K,QACtEuR,EAAK/G,SAAS,CAAE+C,yBAA0B7C,EAAMG,OAAO7K,SAG/DsT,OAAQ,WACwC,KAAxC/B,EAAK3R,MAAM2N,0BACXgE,EAAK/G,SAAS,CAAE+C,yBAA0B,QAK1DtN,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAAEuS,WAAY,SACtB1S,EAAAC,EAAAC,cAACqS,EAAA,EAAY,CAACnS,MAAO,QAASC,OAAQ,QAASiT,cAAc,EAAM7S,MAAOlB,KAAKI,MAAMc,MAAO8S,iBAAkB,SAAC9S,GAAY6Q,EAAK/G,SAAS,CAAE9J,eAGnJT,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAAEG,QAAS,SACnBN,EAAAC,EAAAC,cAACsT,EAAA,EAAM,CACHrT,MAAO,CAAEsT,YAAa,GACtBR,QAAO5T,OAAAyM,EAAA,EAAAzM,CAAAwC,IAAAwG,KAAE,SAAAqL,IAAA,IAAAnO,EAAA,OAAA1D,IAAAsB,KAAA,SAAAwQ,GAAA,cAAAA,EAAAzK,KAAAyK,EAAA/M,MAAA,OAC4B,OAAjC0K,EAAK/G,SAAS,CAAEoG,SAAS,IAAQgD,EAAA/M,KAAA,EACZ0K,EAAKzF,4BAA2B,OAA/CtG,EAAMoO,EAAA1N,KACZqL,EAAK/G,SAAS,CAAEoG,SAAS,EAAOjP,QAAS6D,IAAU,wBAAAoO,EAAAtK,SAAAqK,MAEvDN,QAAQ,WACRQ,UAAWrU,KAAKI,MAAMiR,aACzB,eAGD5Q,EAAAC,EAAAC,cAACsT,EAAA,EAAM,CACHrT,MAAO,CAAEuS,WAAY,GACrBO,QAAS,WACL,IAAM1N,EAAS+L,EAAKnG,mBACpBmG,EAAK/G,SAAS,CAAE7I,QAAS6D,KAE7B6N,QAAQ,YACX,eAMhBhJ,EA5YoB,CAASvJ,IAAMC,WCGzB+S,MARf,WACE,OACE7T,EAAAC,EAAAC,cAAA,OAAKuB,UAAU,OACXzB,EAAAC,EAAAC,cAAC4T,EAAY,QCKNC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAlH,EAAA,GAAAvH,KAAAyO,EAAA1D,KAAA,WAAqB/K,KAAK,SAAA0O,GAAiD,IAA9CC,EAAMD,EAANC,OAAQC,EAAMF,EAANE,OAAQC,EAAMH,EAANG,OAAQC,EAAMJ,EAANI,OAAQC,EAAOL,EAAPK,QAC3DJ,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAQR,MCDDS,IAASC,WAAW/H,SAASgI,eAAe,SACpDC,OACH5U,EAAAC,EAAAC,cAACF,EAAAC,EAAM4U,WAAU,KACf7U,EAAAC,EAAAC,cAAC4U,EAAG,QAORf","file":"static/js/main.f4c5d47e.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport class LetterCell extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{ width: '41.66666666666667px', height: '54.16666666666667px', display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n                <div style={{ color: this.props.color, opacity: this.props.opacity, fontSize: '40px' }}>{this.props.col}</div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport {LetterCell} from \"./letterCell\";\r\n\r\nexport class LetterRow extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{width: '1000px', height:'54.16666666666667px', display: 'flex', flexDirection: 'row'}}>\r\n                {this.props.row && this.props.row.map(((letter, index) =>  {\r\n                    return <LetterCell color={this.props.color} col={letter} key={index} opacity={this.props.opacity} />}))\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport {LetterRow} from \"./LetterRow\";\r\n\r\nexport class TextLayer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{display: 'flex',  flexDirection: 'column', flexWrap: 'wrap', width: '100%', height: '100%'}} className=\"TextContainer\">\r\n                {this.props.letters && this.props.letters.map(((letterRow, index) =>  {\r\n                    return <LetterRow color={this.props.color} row={letterRow} key={index} opacity={this.props.opacity} />}))\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport './App.css';\r\nimport './textLayer';\r\nimport { TextLayer } from \"./textLayer\";\r\nimport Resizer from \"react-image-file-resizer\";\r\nimport * as htmlToImage from \"html-to-image\";\r\nimport { Button, CircularProgress, TextField } from '@mui/material';\r\nimport { AlphaPicker, ChromePicker } from 'react-color';\r\n\r\nexport class AppContainer extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.fileChangedHandler = this.fileChangedHandler.bind(this);\r\n        this.state = {\r\n            threshhold: 0,\r\n            letters: [],\r\n            backgroundImage: null,\r\n            loading: false,\r\n            imageLoaded: false,\r\n            opacity: 1,\r\n            opacityInputValue: 100,\r\n            color: { hex: '#000000', rgb: { r: 0, g: 0, b: 0 } },\r\n            minPixelsBelowThreshhold: 5,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const opacityInputValue = Math.round(this.state.opacity * 100);\r\n        this.setState({ opacityInputValue });\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevState.opacity !== this.state.opacity) {\r\n            this.setState({ opacityInputValue: Math.round(this.state.opacity * 100) });\r\n        }\r\n    }\r\n\r\n    handleOpacityChange = (value) => {\r\n        const opacity = value.rgb.a;\r\n        this.setState({ opacity });\r\n    }\r\n\r\n    handleOpacityInputChange = (event) => {\r\n        const inputValue = parseInt(event.target.value);\r\n\r\n        if (inputValue < 1 || inputValue > 100 || isNaN(inputValue)) {\r\n            return;\r\n        }\r\n\r\n        this.handleOpacityChange({ rgb: { r: 0, g: 0, b: 0, a: inputValue / 100 } });\r\n    }\r\n\r\n    selectInputValue = (field) => {\r\n        field.target.select();\r\n    }\r\n\r\n    getRandomLetters = () => {\r\n        const letters = []\r\n        for (let i = 0; i < 24; i++) {\r\n            const row = [];\r\n            for (let j = 0; j < 24; j++) {\r\n                row.push(this.getRandomLetter());\r\n            }\r\n            letters.push(row);\r\n        }\r\n        return letters\r\n    }\r\n\r\n    rgbToGrayscale = (r, g, b) => {\r\n        return 0.2126 * r + 0.7152 * g + 0.0722 * b;\r\n    };\r\n\r\n    calcAbsolutePixel = (pixel, pixel1, pixel2) => {\r\n        const absR = Math.abs(Math.abs(pixel.r - pixel1.r) - pixel2.r);\r\n        const absG = Math.abs(Math.abs(pixel.g - pixel1.g) - pixel2.g);\r\n        const absB = Math.abs(Math.abs(pixel.b - pixel1.b) - pixel2.b);\r\n\r\n        return {\r\n            r: absR,\r\n            g: absG,\r\n            b: absB\r\n        };\r\n    };\r\n\r\n    blockCellsBelowThreshhold = async () => {\r\n        return new Promise(async (resolve, reject) => {\r\n            const imageHtml = document.querySelector(\".image\");\r\n            const image1Html = document.querySelector(\".image1\");\r\n            const image2Html = document.querySelector(\".image2\");\r\n\r\n            const imageBase64 = await htmlToImage.toPng(imageHtml, { quality: 1 });\r\n            const image1Base64 = await htmlToImage.toPng(image1Html, { quality: 1 });\r\n            const image2Base64 = await htmlToImage.toPng(image2Html, { quality: 1 });\r\n\r\n            const imageUrls = [imageBase64, image1Base64, image2Base64];\r\n\r\n            Promise.all(imageUrls.map(e =>\r\n                new Promise((resolve, reject) => {\r\n                    const img = new Image();\r\n                    img.onload = () => resolve(img);\r\n                    img.onerror = reject;\r\n                    img.src = e;\r\n                })\r\n            )).then((result) => {\r\n                const image = result[0];\r\n                const image1 = result[1];\r\n                const image2 = result[2];\r\n                let newLetters = new Array(24);\r\n                for (var h = 0; h < newLetters.length; h++) {\r\n                    newLetters[h] = new Array(24);\r\n                }\r\n                let minPixelsBelowThreshhold;\r\n                if (!this.state.minPixelsBelowThreshhold) {\r\n                    minPixelsBelowThreshhold = 5;\r\n                } else {\r\n                    minPixelsBelowThreshhold = this.state.minPixelsBelowThreshhold;\r\n                }\r\n                const height = 1300;\r\n                const width = 1000;\r\n                const padding = 0;\r\n                const cellPxHeight = (height - (padding * 2)) / 24;\r\n                const cellPxWidth = (width - (padding * 2)) / 24;\r\n\r\n                const canvas = document.createElement('canvas');\r\n                const canvas1 = document.createElement('canvas');\r\n                const canvas2 = document.createElement('canvas');\r\n\r\n                canvas.width = width;\r\n                canvas.height = height;\r\n\r\n                canvas1.width = width;\r\n                canvas1.height = height;\r\n\r\n                canvas2.width = width;\r\n                canvas2.height = height;\r\n\r\n                const context = canvas.getContext('2d');\r\n                const context1 = canvas1.getContext('2d');\r\n                const context2 = canvas2.getContext('2d');\r\n\r\n                context.drawImage(image, 0, 0, width, height);\r\n                context1.drawImage(image1, 0, 0, width, height);\r\n                context2.drawImage(image2, 0, 0, width, height);\r\n\r\n                const imageData = context.getImageData(0, 0, canvas.width, canvas.height);\r\n                const imageData1 = context1.getImageData(0, 0, canvas1.width, canvas1.height);\r\n                const imageData2 = context2.getImageData(0, 0, canvas2.width, canvas2.height);\r\n\r\n                let currRowPxCount = padding;\r\n                let currColPxCount = padding;\r\n\r\n                for (let row = 0; row < 24; row++) {\r\n                    for (let col = 0; col < 24; col++) {\r\n                        let belowThreshhold = false;\r\n                        let pixelsBelowThreshhold = 0;\r\n                        let darkestPixel = {\r\n                            row,\r\n                            col,\r\n                            x: currRowPxCount,\r\n                            y: currColPxCount,\r\n                            grayscale: 255,\r\n                        };\r\n                        for (let m = 0; m < Math.round(cellPxWidth); m++) {\r\n                            for (let n = 0; n < Math.round(cellPxHeight); n++) {\r\n                                const pixel2 = this.getPx(imageData2, Math.round(currRowPxCount + m), Math.round(currColPxCount + n));\r\n\r\n                                if ((pixel2.r !== 0 && pixel2.g !== 0 && pixel2.b !== 0) && (pixel2.r !== 255 && pixel2.g !== 255 && pixel2.b !== 255)) {\r\n                                    continue;\r\n                                }\r\n\r\n                                const pixel = this.getPx(imageData, Math.round(currRowPxCount + m), Math.round(currColPxCount + n));\r\n                                const pixel1 = this.getPx(imageData1, Math.round(currRowPxCount + m), Math.round(currColPxCount + n));\r\n\r\n                                const absPixel = this.calcAbsolutePixel(pixel, pixel1, pixel2);\r\n\r\n                                const grayscale = this.rgbToGrayscale(absPixel.r, absPixel.g, absPixel.b);\r\n\r\n                                if (grayscale < darkestPixel.grayscale) {\r\n                                    darkestPixel = {\r\n                                        row,\r\n                                        col,\r\n                                        x: currRowPxCount + m,\r\n                                        y: currColPxCount + n,\r\n                                        grayscale\r\n                                    }\r\n                                }\r\n\r\n                                if (parseInt(grayscale) <= parseInt(this.state.threshhold)) {\r\n                                    pixelsBelowThreshhold++;\r\n                                }\r\n\r\n                                if (pixelsBelowThreshhold >= minPixelsBelowThreshhold) {\r\n                                    belowThreshhold = true;\r\n                                    newLetters[row][col] = '~';\r\n                                    break;\r\n                                } else {\r\n                                    newLetters[row][col] = this.state.letters[row][col];\r\n                                }\r\n                            }\r\n                            if (belowThreshhold) {\r\n                                break;\r\n                            }\r\n                        }\r\n                        console.log(darkestPixel);\r\n                        currRowPxCount += cellPxWidth;\r\n                    }\r\n                    currRowPxCount = padding;\r\n                    currColPxCount += cellPxHeight;\r\n                }\r\n                resolve(newLetters);\r\n            }).catch(() => {\r\n                reject();\r\n            });\r\n        })\r\n    };\r\n\r\n    getPx = (imageData, x, y) => {\r\n        var data32 = new Uint32Array(imageData.data.buffer),\r\n            val32 = data32[y * imageData.width + x],\r\n            str32,\r\n            a = 0,\r\n            b = 0,\r\n            g = 0,\r\n            r = 0;\r\n\r\n        if (val32 > 0) {\r\n            str32 = val32.toString(16);\r\n            a = parseInt(str32.substr(0, 2), 16);\r\n            b = parseInt(str32.substr(2, 2), 16);\r\n            g = parseInt(str32.substr(4, 2), 16);\r\n            r = parseInt(str32.substr(6, 2), 16);\r\n        }\r\n\r\n        return {\r\n            r: r,\r\n            g: g,\r\n            b: b,\r\n            a: a,\r\n        };\r\n    };\r\n\r\n    fileChangedHandler(event) {\r\n        var fileInput = false;\r\n        if (event.target.files[0]) {\r\n            fileInput = true;\r\n        }\r\n        if (fileInput) {\r\n            try {\r\n                Resizer.imageFileResizer(\r\n                    event.target.files[0],\r\n                    556,\r\n                    696,\r\n                    \"JPEG\",\r\n                    100,\r\n                    0,\r\n                    (uri) => {\r\n                        const letters = this.getRandomLetters();\r\n                        this.setState({ backgroundImage: uri, letters: letters });\r\n                    },\r\n                    \"base64\",\r\n                    556,\r\n                    696\r\n                );\r\n                this.setState({ imageLoaded: true });\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n        }\r\n    }\r\n\r\n    getRandomLetter = () => {\r\n        return String.fromCharCode(Math.floor(Math.random() * 26) + 65);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div style={{ position: 'relative', display: 'flex', justifyContent: 'center', alignItems: 'center', width: '100%', height: 'auto', flexDirection: 'column', paddingTop: '10px', paddingBottom: '10px', }} className=\"App\">\r\n                {\r\n                    this.state.loading && (\r\n                        <div style={{ position: 'absolute', backgroundColor: 'white', zIndex: 999, width: '100%', height: '100%' }}>\r\n                            <div style={{ position: 'fixed', top: '50%', left: '50%', transform: 'translate(-50%, -50%)' }}>\r\n                                <CircularProgress />\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }\r\n                <div style={{ marginBottom: '10px' }}>\r\n                    <input type={\"file\"} id={'imageUpload'} name={'imageUpload'} onChange={this.fileChangedHandler} />\r\n                </div>\r\n                <div style={{ display: 'flex' }}>\r\n                    <div className='image' style={{ width: '1000px', height: '1300px', position: 'relative' }}>\r\n                        <div style={{ width: '100%', height: '100%', position: 'absolute' }}>\r\n                            <img alt={\"\"} style={{ width: '1000px', height: '1300px', }} src={this.state.backgroundImage} />\r\n                        </div>\r\n                        <div style={{ width: '100%', height: '100%', position: 'absolute' }}>\r\n                            <div style={{ width: '100%', height: '100%' }}>\r\n                                <TextLayer letters={this.state.letters} color={this.state.color.hex} opacity={this.state.opacity} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='image1' style={{ width: '1000px', height: '1300px', position: 'relative', display: `${this.state.loading ? 'block' : 'none'}` }}>\r\n                        <div style={{ width: '100%', height: '100%', position: 'absolute' }}>\r\n                            <img alt={\"\"} style={{ width: '1000px', height: '1300px', }} src={this.state.backgroundImage} />\r\n                        </div>\r\n                        <div style={{ width: '100%', height: '100%', position: 'absolute' }}>\r\n                            <div style={{ width: '100%', height: '100%' }}>\r\n                                <TextLayer letters={this.state.letters} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='image2' style={{ width: '1000px', height: '1300px', position: 'relative', backgroundColor: 'white', display: `${this.state.loading ? 'block' : 'none'}` }}>\r\n                        <div style={{ width: '100%', height: '100%', position: 'absolute' }}>\r\n                            <div style={{ width: '100%', height: '100%' }}>\r\n                                <TextLayer letters={this.state.letters} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div style={{ display: 'flex', alignItems: 'center', width: '25%', marginTop: '10px' }}>\r\n                    <div style={{ position: 'relative', width: '316px', height: '16px' }}>\r\n                        <AlphaPicker\r\n                            color={{ h: 250, s: 0, l: 0.2, a: this.state.opacity }}\r\n                            onChange={(value) => {\r\n                                this.handleOpacityChange(value);\r\n                            }}\r\n                        />\r\n                    </div>\r\n                    <div style={{ display: 'flex', alignItems: 'center', marginLeft: 20 }}>\r\n                        <TextField\r\n                            style={{ width: '75px' }}\r\n                            type=\"number\"\r\n                            value={this.state.opacityInputValue}\r\n                            inputProps={{ min: \"1\", max: \"100\", step: \"1\" }}\r\n                            onChange={this.handleOpacityInputChange}\r\n                            onFocus={this.selectInputValue}\r\n                            onClick={this.selectInputValue}\r\n                        />\r\n                        <span style={{ marginLeft: 10 }}>%</span>\r\n                    </div>\r\n                </div>\r\n                <div style={{ display: 'flex', alignItems: 'center', marginTop: '10px', marginBottom: '10px' }}>\r\n                    <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\r\n                        <TextField\r\n                            margin='normal'\r\n                            type=\"number\"\r\n                            id=\"outlined-basic\"\r\n                            label=\"Threshhold\"\r\n                            variant=\"outlined\"\r\n                            value={this.state.threshhold}\r\n                            onChange={(event) => {\r\n                                if (event.target.value >= 0 && event.target.value <= 255) {\r\n                                    this.setState({ threshhold: event.target.value });\r\n                                }\r\n                            }}\r\n                        />\r\n                        <TextField\r\n                            margin='normal'\r\n                            type=\"number\"\r\n                            id=\"outlined-basic\"\r\n                            label=\"Pixels below threshhold\"\r\n                            variant=\"outlined\"\r\n                            value={this.state.minPixelsBelowThreshhold}\r\n                            onChange={(event) => {\r\n                                if ((event.target.value > 0 && event.target.value <= 200) || event.target.value === '') {\r\n                                    this.setState({ minPixelsBelowThreshhold: event.target.value });\r\n                                }\r\n                            }}\r\n                            onBlur={() => {\r\n                                if (this.state.minPixelsBelowThreshhold === '') {\r\n                                    this.setState({ minPixelsBelowThreshhold: 5 });\r\n                                }\r\n                            }}\r\n                        />\r\n                    </div>\r\n                    <div style={{ marginLeft: '40px' }}>\r\n                        <ChromePicker width={'200px'} height={'200px'} disableAlpha={true} color={this.state.color} onChangeComplete={(color) => { this.setState({ color }) }} />\r\n                    </div>\r\n                </div>\r\n                <div style={{ display: 'flex' }}>\r\n                    <Button\r\n                        style={{ marginRight: 5 }}\r\n                        onClick={async () => {\r\n                            this.setState({ loading: true });\r\n                            const result = await this.blockCellsBelowThreshhold();\r\n                            this.setState({ loading: false, letters: result });\r\n                        }}\r\n                        variant='outlined'\r\n                        disabled={!this.state.imageLoaded}\r\n                    >\r\n                        Block cells\r\n                    </Button>\r\n                    <Button\r\n                        style={{ marginLeft: 5 }}\r\n                        onClick={() => {\r\n                            const result = this.getRandomLetters();\r\n                            this.setState({ letters: result });\r\n                        }}\r\n                        variant='outlined'\r\n                    >\r\n                        Reset\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import './App.css';\r\nimport {AppContainer} from \"./AppContainer\";\r\nimport React from \"react\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n        <AppContainer/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}