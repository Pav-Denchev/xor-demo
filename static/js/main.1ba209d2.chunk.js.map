{"version":3,"sources":["letterCell.js","LetterColumn.js","textLayer.js","AppContainer.js","App.js","reportWebVitals.js","index.js"],"names":["LetterCell","_React$Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","getRandomLetter","String","fromCharCode","Math","floor","random","getOpacity","useKr","cellBrightness","brightness","opacity","targetBrightness","getBrightness","lightColor","rgb","r","g","b","darkColor","getColor","hex","state","inherits","createClass","key","value","react_default","a","createElement","style","width","height","display","justifyContent","alignItems","color","fontSize","col","React","Component","LetterColumn","_this2","flexDirection","brightnessColumn","map","index","letterCell_LetterCell","row","fontLightColor","fontDarkColor","TextLayer","flexWrap","className","letters","brightnessMatrix","LetterColumn_LetterColumn","_regeneratorRuntime","exports","Op","prototype","hasOwn","hasOwnProperty","defineProperty","obj","desc","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","AppContainer","getRandomLetters","j","rgbToGrayscale","calcAbsolutePixel","pixel","pixel1","pixel2","abs","blockCellsBelowThreshhold","asyncToGenerator","_callee2","_context2","_ref2","_callee","imageHtml","image1Html","image2Html","imageBase64","image1Base64","image2Base64","imageUrls","_context","document","querySelector","htmlToImage","quality","all","e","img","Image","onload","onerror","src","image","image1","image2","toConsumableArray","canvas","canvas1","canvas2","getContext","context1","context2","drawImage","imageData","getImageData","imageData1","imageData2","currRowPxCount","currColPxCount","belowThreshhold","darkestPixel","x","y","grayscale","m","round","n","getPx","absPixel","parseInt","threshhold","console","log","_x","_x2","apply","arguments","processImage","base64","Array","h","cellsContrast","pixels","cellBrightnessAverage","reduce","partialSum","rgb2grayscale","contrastCalc","setState","median","arr","sort","midpoint","str32","val32","Uint32Array","data","buffer","toString","substr","handleChangeFontDarkColor","handleChangeFontLightColor","onTargetBrightnessChange","target","cells","column","cell","fontBrightness","backgroundBrightness","getAverageContrast","fileChangedHandler","bind","assertThisInitialized","selectedItem","backgroundImage","showDarkColorPicker","showLightColorPicker","loading","imageLoaded","event","fileInput","files","Resizer","imageFileResizer","uri","_this3","paddingTop","paddingBottom","marginBottom","id","onChange","position","alt","fontFamily","textLayer_TextLayer","concat","backgroundColor","marginTop","border","onClick","bottom","right","es","disableAlpha","onChangeComplete","min","max","step","zIndex","top","left","transform","CircularProgress","TextField","margin","label","variant","Button","marginRight","_callee3","_context3","disabled","marginLeft","App","AppContainer_AppContainer","reportWebVitals","onPerfEntry","Function","__webpack_require__","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.1ba209d2.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nexport class LetterCell extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    getRandomLetter = () => {\r\n        return String.fromCharCode(Math.floor(Math.random()*26)+65);\r\n    };\r\n\r\n    getOpacity = () => {\r\n        if (this.props.useKr) {\r\n            let cellBrightness = this.props.brightness;\r\n            let targetBrightness = this.props.targetBrightness;\r\n            /*console.log(cellBrightness);\r\n            console.log(targetBrightness);\r\n            console.log((targetBrightness-cellBrightness)/(this.getBrightness()-cellBrightness));*/\r\n            let opacity = (targetBrightness-cellBrightness)/(this.getBrightness()-cellBrightness);\r\n            if (opacity < 0) return 0;\r\n            if (opacity > 1) return 1;\r\n            if (!opacity) return 0;\r\n            return opacity;\r\n        } else {\r\n            return 1;\r\n        }\r\n    };\r\n\r\n    getBrightness = () => {\r\n        let cellBrightness = this.props.brightness;\r\n        let targetBrightness = this.props.targetBrightness;\r\n        if (cellBrightness < targetBrightness) {\r\n            if (this.props.lightColor.rgb) return 0.3*this.props.lightColor.rgb.r+0.587*this.props.lightColor.rgb.g+0.113*this.props.lightColor.rgb.b;\r\n            return 255;\r\n        }\r\n        if (this.props.darkColor.rgb) return 0.3*this.props.darkColor.rgb.r+0.587*this.props.darkColor.rgb.g+0.113*this.props.darkColor.rgb.b;\r\n        return 0;\r\n    };\r\n\r\n    getColor = () => {\r\n        if (this.props.useKr) {\r\n            let cellBrightness = this.props.brightness;\r\n            let targetBrightness = this.props.targetBrightness;\r\n    \r\n            if (cellBrightness < targetBrightness) return this.props.lightColor.hex;\r\n            return this.props.darkColor.hex;\r\n        } else {\r\n            return '#000000'\r\n        }\r\n\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div style={{width: '41.66666666666667px', height:'54.16666666666667px', display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\r\n                <div style={{opacity: this.getOpacity(), color: this.getColor(), fontSize: '40px'}}>{this.props.col}</div>\r\n            </div>\r\n\r\n    )\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport {LetterCell} from \"./letterCell\";\r\n\r\n\r\nexport class LetterColumn extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div style={{width: '41.666666666667', height:'1300px', display: 'flex', flexDirection: 'column'}}>\r\n                {this.props.brightnessColumn && this.props.brightnessColumn.map(((brightness,index) =>  {\r\n                    return <LetterCell useKr={this.props.useKr} col={this.props.row[index]} key={index} brightness={brightness} targetBrightness={this.props.targetBrightness} lightColor={this.props.fontLightColor} darkColor={this.props.fontDarkColor}/>}))\r\n                }\r\n            </div>\r\n\r\n    )\r\n\r\n    }\r\n\r\n}\r\n\r\n","import React from 'react';\r\n\r\nimport {LetterColumn} from \"./LetterColumn\";\r\n\r\n\r\nexport class TextLayer extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div style={{display: 'flex',  flexDirection: 'row', flexWrap: 'wrap', width: '100%', height: '100%'}} className=\"TextContainer\">\r\n                {this.props.letters && this.props.brightnessMatrix && this.props.brightnessMatrix.map(((brightness,index) =>  {\r\n                    return <LetterColumn useKr={this.props.useKr} row={this.props.letters[index]} key={index} brightnessColumn={brightness} targetBrightness={this.props.targetBrightness} fontLightColor={this.props.fontLightColor} fontDarkColor={this.props.fontDarkColor}/>}))\r\n                }\r\n            </div>\r\n    )\r\n\r\n    }\r\n\r\n}\r\n\r\n","import React from 'react';\r\nimport './App.css';\r\nimport './textLayer';\r\nimport { TextLayer } from \"./textLayer\";\r\nimport Resizer from \"react-image-file-resizer\";\r\nimport { ChromePicker } from \"react-color\";\r\nimport * as htmlToImage from \"html-to-image\";\r\nimport { Button, CircularProgress, TextField } from '@mui/material';\r\n\r\nexport class AppContainer extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.fileChangedHandler = this.fileChangedHandler.bind(this);\r\n        this.state = {\r\n            threshhold: 0,\r\n            letters: [],\r\n            selectedItem: 0,\r\n            backgroundImage: null,\r\n            fontDarkColor: { hex: '#000000', rgb: { r: 0, g: 0, b: 0 } },\r\n            fontLightColor: { hex: '#ffffff', rgb: { r: 255, g: 255, b: 255 } },\r\n            showDarkColorPicker: false,\r\n            showLightColorPicker: false,\r\n            targetBrightness: 127,\r\n            loading: false,\r\n            imageLoaded: false,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const letters = this.getRandomLetters();\r\n        this.setState({ fontDarkColor: { hex: '#000000', rgb: { r: 0, g: 0, b: 0 } }, letters: letters });\r\n    }\r\n\r\n    getRandomLetters = () => {\r\n        const letters = []\r\n        for (let i = 0; i < 24; i++) {\r\n            const row = [];\r\n            for (let j = 0; j < 24; j++) {\r\n                row.push(this.getRandomLetter());\r\n            }\r\n            letters.push(row);\r\n        }\r\n        return letters\r\n    }\r\n\r\n    rgbToGrayscale = (r, g, b) => {\r\n        return 0.2126 * r + 0.7152 * g + 0.0722 * b;\r\n    };\r\n\r\n    calcAbsolutePixel = (pixel, pixel1, pixel2) => {\r\n        const absR = Math.abs(Math.abs(pixel.r - pixel1.r) - pixel2.r);\r\n        const absG = Math.abs(Math.abs(pixel.g - pixel1.g) - pixel2.g);\r\n        const absB = Math.abs(Math.abs(pixel.b - pixel1.b) - pixel2.b);\r\n\r\n        return {\r\n            r: absR,\r\n            g: absG,\r\n            b: absB\r\n        };\r\n    };\r\n\r\n    blockCellsBelowThreshhold = async () => {\r\n        return new Promise(async (resolve, reject) => {\r\n            const imageHtml = document.querySelector(\".image\");\r\n            const image1Html = document.querySelector(\".image1\");\r\n            const image2Html = document.querySelector(\".image2\");\r\n\r\n            const imageBase64 = await htmlToImage.toPng(imageHtml, { quality: 1 });\r\n            const image1Base64 = await htmlToImage.toPng(image1Html, { quality: 1 });\r\n            const image2Base64 = await htmlToImage.toPng(image2Html, { quality: 1 });\r\n\r\n            const imageUrls = [imageBase64, image1Base64, image2Base64];\r\n\r\n            Promise.all(imageUrls.map(e =>\r\n                new Promise((resolve, reject) => {\r\n                    const img = new Image();\r\n                    img.onload = () => resolve(img);\r\n                    img.onerror = reject;\r\n                    img.src = e;\r\n                })\r\n            )).then((result) => {\r\n                const image = result[0];\r\n                const image1 = result[1];\r\n                const image2 = result[2];\r\n                let letters = [...this.state.letters];\r\n                const height = 1300;\r\n                const width = 1000;\r\n                const padding = 0;\r\n                const cellPxHeight = (height - (padding * 2)) / 24;\r\n                const cellPxWidth = (width - (padding * 2)) / 24;\r\n\r\n                const canvas = document.createElement('canvas');\r\n                const canvas1 = document.createElement('canvas');\r\n                const canvas2 = document.createElement('canvas');\r\n\r\n                canvas.width = width;\r\n                canvas.height = height;\r\n\r\n                canvas1.width = width;\r\n                canvas1.height = height;\r\n\r\n                canvas2.width = width;\r\n                canvas2.height = height;\r\n\r\n                const context = canvas.getContext('2d');\r\n                const context1 = canvas1.getContext('2d');\r\n                const context2 = canvas2.getContext('2d');\r\n\r\n                context.drawImage(image, 0, 0, width, height);\r\n                context1.drawImage(image1, 0, 0, width, height);\r\n                context2.drawImage(image2, 0, 0, width, height);\r\n\r\n                const imageData = context.getImageData(0, 0, canvas.width, canvas.height);\r\n                const imageData1 = context1.getImageData(0, 0, canvas1.width, canvas1.height);\r\n                const imageData2 = context2.getImageData(0, 0, canvas2.width, canvas2.height);\r\n\r\n                let currRowPxCount = padding;\r\n                let currColPxCount = padding;\r\n                \r\n                for (let row = 0; row < 24; row++) {\r\n                    for (let col = 0; col < 24; col++) {\r\n                        let belowThreshhold = false;\r\n                        let darkestPixel = {\r\n                            row,\r\n                            col,\r\n                            x: currRowPxCount,\r\n                            y: currColPxCount,\r\n                            grayscale: 255,\r\n                        };\r\n                        for (let m = 0; m < Math.round(cellPxWidth); m++) {\r\n                            for (let n = 0; n < Math.round(cellPxHeight); n++) {\r\n                                const pixel2 = this.getPx(imageData2, Math.round(currRowPxCount + m), Math.round(currColPxCount + n));\r\n\r\n                                if ((pixel2.r !== 0 && pixel2.g !== 0 && pixel2.b !== 0) && (pixel2.r !== 255 && pixel2.g !== 255 && pixel2.b !== 255)) {\r\n                                    continue;\r\n                                }\r\n\r\n                                const pixel = this.getPx(imageData, Math.round(currRowPxCount + m), Math.round(currColPxCount + n));\r\n                                const pixel1 = this.getPx(imageData1, Math.round(currRowPxCount + m), Math.round(currColPxCount + n));\r\n\r\n                                const absPixel = this.calcAbsolutePixel(pixel, pixel1, pixel2);\r\n\r\n                                const grayscale = this.rgbToGrayscale(absPixel.r, absPixel.g, absPixel.b);\r\n\r\n                                if (grayscale < darkestPixel.grayscale) {\r\n                                    darkestPixel = {\r\n                                        row,\r\n                                        col,\r\n                                        x: currRowPxCount + m,\r\n                                        y: currColPxCount + n,\r\n                                        grayscale\r\n                                    }\r\n                                }\r\n\r\n                                if (parseInt(grayscale) <= parseInt(this.state.threshhold)) {\r\n                                    belowThreshhold = true;\r\n                                    letters[row][col] = '`';\r\n                                    break;\r\n                                }\r\n                            }\r\n                            if (belowThreshhold) {\r\n                                break;\r\n                            }\r\n                        }\r\n                        console.log(darkestPixel);\r\n                        currRowPxCount += cellPxWidth;\r\n                    }\r\n                    currRowPxCount = padding;\r\n                    currColPxCount += cellPxHeight;\r\n                }\r\n\r\n                resolve(letters);\r\n            }).catch(() => {\r\n                reject();\r\n            });\r\n        })\r\n    };\r\n\r\n    processImage = (base64) => {\r\n\r\n        let brightnessMatrix = new Array(24);\r\n        for (var h = 0; h < brightnessMatrix.length; h++) {\r\n            brightnessMatrix[h] = new Array(24);\r\n        }\r\n\r\n        var image = new Image();\r\n        image.src = base64;\r\n        image.onload = () => {\r\n\r\n            var canvas = document.createElement('canvas');\r\n            canvas.width = image.width;\r\n            canvas.height = image.height;\r\n            var context = canvas.getContext('2d');\r\n            context.drawImage(image, 0, 0, 556, 696);\r\n            let cellsContrast = [];\r\n            var imageData = context.getImageData(38, 34, canvas.width - 76, canvas.height - 72);\r\n            for (let i = 0; i < 480; i = i + 20) {\r\n                for (let j = 0; j < 624; j = j + 26) {\r\n                    // analyzing a cell (getting average grayscale value of cell)\r\n                    var pixels = [];\r\n                    for (let m = 0; m < 20; m++) {\r\n                        for (let n = 0; n < 26; n++) {\r\n                            pixels.push(this.getPx(imageData, i + m, j + n));\r\n\r\n                        }\r\n                    }\r\n                    let cellBrightnessAverage = pixels.reduce((partialSum, pixel) => partialSum + this.rgb2grayscale(pixel.r, pixel.g, pixel.b), 0) / pixels.length;\r\n\r\n                    brightnessMatrix[Math.floor(i / 20)][Math.floor(j / 26)] = cellBrightnessAverage;\r\n                    cellsContrast.push(this.contrastCalc(this.state.targetBrightness, cellBrightnessAverage));\r\n                }\r\n            }\r\n            this.setState({ brightnessMatrix: brightnessMatrix, cellsContrast: cellsContrast });\r\n        }\r\n    };\r\n\r\n    median = (arr) => {\r\n        if (arr.length === 0) {\r\n            return; // 0.\r\n        }\r\n        arr.sort((a, b) => a - b); // 1.\r\n        const midpoint = Math.floor(arr.length / 2); // 2.\r\n        return arr.length % 2 === 1 ?\r\n            arr[midpoint] : // 3.1. If odd length, just take midpoint\r\n            (arr[midpoint - 1] + arr[midpoint]) / 2; // 3.2. If even length, take median of midpoints\r\n    };\r\n\r\n    getPx = (imageData, x, y) => {\r\n        var data32 = new Uint32Array(imageData.data.buffer),\r\n            val32 = data32[y * imageData.width + x],\r\n            str32,\r\n            a = 0,\r\n            b = 0,\r\n            g = 0,\r\n            r = 0;\r\n\r\n        if (val32 > 0) {\r\n            str32 = val32.toString(16);\r\n            a = parseInt(str32.substr(0, 2), 16);\r\n            b = parseInt(str32.substr(2, 2), 16);\r\n            g = parseInt(str32.substr(4, 2), 16);\r\n            r = parseInt(str32.substr(6, 2), 16);\r\n        }\r\n\r\n        return {\r\n            r: r,\r\n            g: g,\r\n            b: b,\r\n            a: a,\r\n        };\r\n    };\r\n\r\n    rgb2grayscale = (r, g, b) => { return 0.3 * r + 0.587 * g + 0.113 * b };\r\n\r\n    fileChangedHandler(event) {\r\n        var fileInput = false;\r\n        if (event.target.files[0]) {\r\n            fileInput = true;\r\n        }\r\n        if (fileInput) {\r\n            try {\r\n                Resizer.imageFileResizer(\r\n                    event.target.files[0],\r\n                    556,\r\n                    696,\r\n                    \"JPEG\",\r\n                    100,\r\n                    0,\r\n                    (uri) => {\r\n                        this.setState({ backgroundImage: uri });\r\n                        this.processImage(uri);\r\n                    },\r\n                    \"base64\",\r\n                    556,\r\n                    696\r\n                );\r\n                this.setState({ imageLoaded: true });\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n        }\r\n    }\r\n\r\n    handleChangeFontDarkColor = (color) => {\r\n        this.setState({ fontDarkColor: color });\r\n    };\r\n\r\n    handleChangeFontLightColor = (color) => {\r\n        this.setState({ fontLightColor: color });\r\n    };\r\n\r\n    onTargetBrightnessChange = (e) => {\r\n        let targetBrightness = e.target.value;\r\n        let cellsContrast = [];\r\n        let cells = this.state.brightnessMatrix;\r\n\r\n        if (cells) {\r\n            cells.forEach(column => {\r\n                column.forEach(cell => {\r\n                    cellsContrast.push(this.contrastCalc(targetBrightness, cell))\r\n                })\r\n            });\r\n        }\r\n\r\n        this.setState({ cellsContrast: cellsContrast, targetBrightness: targetBrightness });\r\n    };\r\n\r\n    contrastCalc = (fontBrightness, backgroundBrightness) => {\r\n        if (fontBrightness > backgroundBrightness) return ((fontBrightness / 255 + 0.05) / (backgroundBrightness / 255 + 0.05));\r\n        return ((backgroundBrightness / 255 + 0.05) / (fontBrightness / 255 + 0.05));\r\n    };\r\n\r\n    getAverageContrast = () => {\r\n        let cellsContrast = this.state.cellsContrast;\r\n        return cellsContrast && Math.round(cellsContrast.reduce((partialSum, a) => partialSum + a, 0) / cellsContrast.length * 1000) / 1000;\r\n    };\r\n\r\n    getRandomLetter = () => {\r\n        return String.fromCharCode(Math.floor(Math.random() * 26) + 65);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', width: '100%', height: 'auto', flexDirection: 'column', paddingTop: '10px', paddingBottom: '10px', }} className=\"App\">\r\n                <div style={{ marginBottom: '10px' }}>\r\n                    <input type={\"file\"} id={'imageUpload'} name={'imageUpload'} onChange={this.fileChangedHandler} />\r\n                </div>\r\n                <div style={{ display: 'flex' }}>\r\n                    <div className='image' style={{ width: '1000px', height: '1300px', position: 'relative' }}>\r\n                        <div style={{ width: '100%', height: '100%', position: 'absolute' }}>\r\n                            <img alt={\"\"} style={{ width: '1000px', height: '1300px', }} src={this.state.backgroundImage} />\r\n                        </div>\r\n                        <div style={{ width: '100%', height: '100%', position: 'absolute' }}>\r\n                            <div style={{ width: '100%', height: '100%', fontFamily: 'Motiva' }}>\r\n                                <TextLayer useKr={true} letters={this.state.letters} brightnessMatrix={this.state.brightnessMatrix} targetBrightness={this.state.targetBrightness} fontLightColor={this.state.fontLightColor} fontDarkColor={this.state.fontDarkColor} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='image1' style={{ width: '1000px', height: '1300px', position: 'relative', display: `${this.state.loading ? 'block' : 'none'}` }}>\r\n                        <div style={{ width: '100%', height: '100%', position: 'absolute' }}>\r\n                            <img alt={\"\"} style={{ width: '1000px', height: '1300px', }} src={this.state.backgroundImage} />\r\n                        </div>\r\n                        <div style={{ width: '100%', height: '100%', position: 'absolute' }}>\r\n                            <div style={{ width: '100%', height: '100%', fontFamily: 'Motiva' }}>\r\n                                <TextLayer letters={this.state.letters} brightnessMatrix={this.state.brightnessMatrix} targetBrightness={this.state.targetBrightness} fontLightColor={this.state.fontLightColor} fontDarkColor={this.state.fontDarkColor} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='image2' style={{ width: '1000px', height: '1300px', position: 'relative', backgroundColor: 'white', display: `${this.state.loading ? 'block' : 'none'}` }}>\r\n                        <div style={{ width: '100%', height: '100%', position: 'absolute' }}>\r\n                            <div style={{ width: '100%', height: '100%', fontFamily: 'Motiva' }}>\r\n                                <TextLayer letters={this.state.letters} brightnessMatrix={this.state.brightnessMatrix} targetBrightness={this.state.targetBrightness} fontLightColor={this.state.fontLightColor} fontDarkColor={this.state.fontDarkColor} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div style={{ width: '100%', display: 'flex', alignItems: 'center', flexDirection: 'column', marginTop: '20px' }}>\r\n                    <div style={{ width: '100%', display: 'flex', alignItems: 'center', flexDirection: 'row-reverse', justifyContent: 'center' }}>\r\n                        <div style={{ width: '20px', height: '20px', border: '1px solid', backgroundColor: this.state.fontLightColor.hex }} onClick={() => { this.setState({ showLightColorPicker: !this.state.showLightColorPicker, showDarkColorPicker: false }) }}>\r\n                        </div>\r\n                        <div style={{ position: 'fixed', bottom: '10px', right: '10px' }}>\r\n                            {this.state.showLightColorPicker ? <ChromePicker width={'200px'} height={'200px'} disableAlpha={true} color={this.state.fontLightColor} onChangeComplete={this.handleChangeFontLightColor} /> : null}\r\n                        </div>\r\n                        <div>\r\n                            <input style={{ width: '500px' }}\r\n                                type='range'\r\n                                onChange={this.onTargetBrightnessChange}\r\n                                min={0}\r\n                                max={255}\r\n                                step={1}\r\n                                value={this.state.targetBrightness}\r\n                                className='custom-slider'>\r\n                            </input>\r\n                        </div>\r\n\r\n                        <div style={{ width: '20px', height: '20px', border: '1px solid', backgroundColor: this.state.fontDarkColor.hex }} onClick={() => { this.setState({ showDarkColorPicker: !this.state.showDarkColorPicker, showLightColorPicker: false }) }}>\r\n                        </div>\r\n                        <div style={{ position: 'fixed', bottom: '10px', right: '10px' }}>\r\n                            {this.state.showDarkColorPicker ? <ChromePicker width={'200px'} height={'200px'} disableAlpha={true} color={this.state.fontDarkColor} onChangeComplete={this.handleChangeFontDarkColor} /> : null}\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div>\r\n                        {this.state.targetBrightness} <b>Kr</b>\r\n                    </div>\r\n                    <div>\r\n                        {this.getAverageContrast() ? 'Average Contrast: ' + this.getAverageContrast() : ''}\r\n                    </div>\r\n                </div>\r\n                {\r\n                    this.state.loading && (\r\n                        <div style={{ backgroundColor: 'white', zIndex: 999, position: 'absolute', width: '100%', height: '100%' }}>\r\n                            <div style={{ position: 'absolute', top: '50%', left: '50%', transform: 'translate(-50%, -50%)' }}>\r\n                                <CircularProgress />\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }\r\n                <TextField\r\n                    margin='normal'\r\n                    type=\"number\"\r\n                    id=\"outlined-basic\"\r\n                    label=\"Threshhold\"\r\n                    variant=\"outlined\"\r\n                    value={this.state.threshhold}\r\n                    onChange={(event) => {\r\n                        if (event.target.value >= 0 && event.target.value <= 255) {\r\n                            this.setState({ threshhold: event.target.value });\r\n                        }\r\n                    }}\r\n                />\r\n                <div style={{ display: 'flex' }}>\r\n                    <Button\r\n                        style={{ marginRight: 5 }}\r\n                        onClick={async () => {\r\n                            this.setState({ loading: true });\r\n                            const result = await this.blockCellsBelowThreshhold();\r\n                            this.setState({ loading: false, letters: result });\r\n                        }}\r\n                        variant='outlined'\r\n                        disabled={!this.state.imageLoaded}\r\n                    >\r\n                        Block cells\r\n                    </Button>\r\n                    <Button\r\n                        style={{ marginLeft: 5 }}\r\n                        onClick={() => {\r\n                            const result = this.getRandomLetters();\r\n                            this.setState({ letters: result });\r\n                        }}\r\n                        variant='outlined'\r\n                    >\r\n                        Reset\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import './App.css';\r\nimport {AppContainer} from \"./AppContainer\";\r\nimport React from \"react\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n        <AppContainer/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}