{"version":3,"sources":["letterCell.js","LetterRow.js","textLayer.js","AppContainer.js","App.js","reportWebVitals.js","index.js"],"names":["LetterCell","_React$Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","inherits","createClass","key","value","react_default","a","createElement","style","width","height","display","justifyContent","alignItems","opacity","fontSize","col","React","Component","LetterRow","_this2","flexDirection","row","map","letter","index","letterCell_LetterCell","TextLayer","flexWrap","className","letters","letterRow","LetterRow_LetterRow","_regeneratorRuntime","exports","Op","prototype","hasOwn","hasOwnProperty","defineProperty","obj","desc","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","AppContainer","getRandomLetters","j","getRandomLetter","rgbToGrayscale","r","g","b","calcAbsolutePixel","pixel","pixel1","pixel2","Math","abs","blockCellsBelowThreshhold","asyncToGenerator","_callee2","_context2","_ref2","_callee","imageHtml","image1Html","image2Html","imageBase64","image1Base64","image2Base64","imageUrls","_context","document","querySelector","htmlToImage","quality","all","e","img","Image","onload","onerror","src","image","image1","image2","newLetters","Array","h","canvas","canvas1","canvas2","getContext","context1","context2","drawImage","imageData","getImageData","imageData1","imageData2","currRowPxCount","currColPxCount","belowThreshhold","darkestPixel","x","y","grayscale","m","round","n","getPx","absPixel","parseInt","threshhold","console","log","_x","_x2","apply","arguments","str32","val32","Uint32Array","data","buffer","toString","substr","String","fromCharCode","floor","random","fileChangedHandler","bind","assertThisInitialized","backgroundImage","loading","imageLoaded","event","fileInput","target","files","Resizer","imageFileResizer","uri","setState","_this3","paddingTop","paddingBottom","marginBottom","id","onChange","position","alt","fontFamily","textLayer_TextLayer","concat","backgroundColor","zIndex","top","left","transform","CircularProgress","marginTop","react_color_es","color","s","l","rgb","TextField","margin","label","variant","Button","marginRight","onClick","_callee3","_context3","disabled","marginLeft","App","AppContainer_AppContainer","reportWebVitals","onPerfEntry","Function","__webpack_require__","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.115b19a4.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport class LetterCell extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{ width: '41.66666666666667px', height: '54.16666666666667px', display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n                <div style={{ opacity: this.props.opacity, fontSize: '40px' }}>{this.props.col}</div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport {LetterCell} from \"./letterCell\";\r\n\r\nexport class LetterRow extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{width: '1000px', height:'54.16666666666667px', display: 'flex', flexDirection: 'row'}}>\r\n                {this.props.row && this.props.row.map(((letter, index) =>  {\r\n                    return <LetterCell col={letter} key={index} opacity={this.props.opacity} />}))\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport {LetterRow} from \"./LetterRow\";\r\n\r\nexport class TextLayer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{display: 'flex',  flexDirection: 'column', flexWrap: 'wrap', width: '100%', height: '100%'}} className=\"TextContainer\">\r\n                {this.props.letters && this.props.letters.map(((letterRow, index) =>  {\r\n                    return <LetterRow row={letterRow} key={index} opacity={this.props.opacity} />}))\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport './App.css';\r\nimport './textLayer';\r\nimport { TextLayer } from \"./textLayer\";\r\nimport Resizer from \"react-image-file-resizer\";\r\nimport * as htmlToImage from \"html-to-image\";\r\nimport { Button, CircularProgress, TextField } from '@mui/material';\r\nimport { AlphaPicker } from 'react-color';\r\n\r\nexport class AppContainer extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.fileChangedHandler = this.fileChangedHandler.bind(this);\r\n        this.state = {\r\n            threshhold: 0,\r\n            letters: [],\r\n            backgroundImage: null,\r\n            loading: false,\r\n            imageLoaded: false,\r\n            opacity: 1,\r\n        };\r\n    }\r\n\r\n    getRandomLetters = () => {\r\n        const letters = []\r\n        for (let i = 0; i < 24; i++) {\r\n            const row = [];\r\n            for (let j = 0; j < 24; j++) {\r\n                row.push(this.getRandomLetter());\r\n            }\r\n            letters.push(row);\r\n        }\r\n        return letters\r\n    }\r\n\r\n    rgbToGrayscale = (r, g, b) => {\r\n        return 0.2126 * r + 0.7152 * g + 0.0722 * b;\r\n    };\r\n\r\n    calcAbsolutePixel = (pixel, pixel1, pixel2) => {\r\n        const absR = Math.abs(Math.abs(pixel.r - pixel1.r) - pixel2.r);\r\n        const absG = Math.abs(Math.abs(pixel.g - pixel1.g) - pixel2.g);\r\n        const absB = Math.abs(Math.abs(pixel.b - pixel1.b) - pixel2.b);\r\n\r\n        return {\r\n            r: absR,\r\n            g: absG,\r\n            b: absB\r\n        };\r\n    };\r\n\r\n    blockCellsBelowThreshhold = async () => {\r\n        return new Promise(async (resolve, reject) => {\r\n            const imageHtml = document.querySelector(\".image\");\r\n            const image1Html = document.querySelector(\".image1\");\r\n            const image2Html = document.querySelector(\".image2\");\r\n\r\n            const imageBase64 = await htmlToImage.toPng(imageHtml, { quality: 1 });\r\n            const image1Base64 = await htmlToImage.toPng(image1Html, { quality: 1 });\r\n            const image2Base64 = await htmlToImage.toPng(image2Html, { quality: 1 });\r\n\r\n            const imageUrls = [imageBase64, image1Base64, image2Base64];\r\n\r\n            Promise.all(imageUrls.map(e =>\r\n                new Promise((resolve, reject) => {\r\n                    const img = new Image();\r\n                    img.onload = () => resolve(img);\r\n                    img.onerror = reject;\r\n                    img.src = e;\r\n                })\r\n            )).then((result) => {\r\n                const image = result[0];\r\n                const image1 = result[1];\r\n                const image2 = result[2];\r\n                let newLetters = new Array(24);\r\n                for (var h = 0; h < newLetters.length; h++) {\r\n                    newLetters[h] = new Array(24);\r\n                }\r\n                const height = 1300;\r\n                const width = 1000;\r\n                const padding = 0;\r\n                const cellPxHeight = (height - (padding * 2)) / 24;\r\n                const cellPxWidth = (width - (padding * 2)) / 24;\r\n\r\n                const canvas = document.createElement('canvas');\r\n                const canvas1 = document.createElement('canvas');\r\n                const canvas2 = document.createElement('canvas');\r\n\r\n                canvas.width = width;\r\n                canvas.height = height;\r\n\r\n                canvas1.width = width;\r\n                canvas1.height = height;\r\n\r\n                canvas2.width = width;\r\n                canvas2.height = height;\r\n\r\n                const context = canvas.getContext('2d');\r\n                const context1 = canvas1.getContext('2d');\r\n                const context2 = canvas2.getContext('2d');\r\n\r\n                context.drawImage(image, 0, 0, width, height);\r\n                context1.drawImage(image1, 0, 0, width, height);\r\n                context2.drawImage(image2, 0, 0, width, height);\r\n\r\n                const imageData = context.getImageData(0, 0, canvas.width, canvas.height);\r\n                const imageData1 = context1.getImageData(0, 0, canvas1.width, canvas1.height);\r\n                const imageData2 = context2.getImageData(0, 0, canvas2.width, canvas2.height);\r\n\r\n                let currRowPxCount = padding;\r\n                let currColPxCount = padding;\r\n\r\n                for (let row = 0; row < 24; row++) {\r\n                    for (let col = 0; col < 24; col++) {\r\n                        let belowThreshhold = false;\r\n                        let darkestPixel = {\r\n                            row,\r\n                            col,\r\n                            x: currRowPxCount,\r\n                            y: currColPxCount,\r\n                            grayscale: 255,\r\n                        };\r\n                        for (let m = 0; m < Math.round(cellPxWidth); m++) {\r\n                            for (let n = 0; n < Math.round(cellPxHeight); n++) {\r\n                                const pixel2 = this.getPx(imageData2, Math.round(currRowPxCount + m), Math.round(currColPxCount + n));\r\n\r\n                                if ((pixel2.r !== 0 && pixel2.g !== 0 && pixel2.b !== 0) && (pixel2.r !== 255 && pixel2.g !== 255 && pixel2.b !== 255)) {\r\n                                    continue;\r\n                                }\r\n\r\n                                const pixel = this.getPx(imageData, Math.round(currRowPxCount + m), Math.round(currColPxCount + n));\r\n                                const pixel1 = this.getPx(imageData1, Math.round(currRowPxCount + m), Math.round(currColPxCount + n));\r\n\r\n                                const absPixel = this.calcAbsolutePixel(pixel, pixel1, pixel2);\r\n\r\n                                const grayscale = this.rgbToGrayscale(absPixel.r, absPixel.g, absPixel.b);\r\n\r\n                                if (grayscale < darkestPixel.grayscale) {\r\n                                    darkestPixel = {\r\n                                        row,\r\n                                        col,\r\n                                        x: currRowPxCount + m,\r\n                                        y: currColPxCount + n,\r\n                                        grayscale\r\n                                    }\r\n                                }\r\n\r\n                                if (parseInt(grayscale) <= parseInt(this.state.threshhold)) {\r\n                                    belowThreshhold = true;\r\n                                    newLetters[row][col] = '~';\r\n                                    break;\r\n                                } else {\r\n                                    newLetters[row][col] = this.state.letters[row][col];\r\n                                }\r\n                            }\r\n                            if (belowThreshhold) {\r\n                                break;\r\n                            }\r\n                        }\r\n                        console.log(darkestPixel);\r\n                        currRowPxCount += cellPxWidth;\r\n                    }\r\n                    currRowPxCount = padding;\r\n                    currColPxCount += cellPxHeight;\r\n                }\r\n                resolve(newLetters);\r\n            }).catch(() => {\r\n                reject();\r\n            });\r\n        })\r\n    };\r\n\r\n    getPx = (imageData, x, y) => {\r\n        var data32 = new Uint32Array(imageData.data.buffer),\r\n            val32 = data32[y * imageData.width + x],\r\n            str32,\r\n            a = 0,\r\n            b = 0,\r\n            g = 0,\r\n            r = 0;\r\n\r\n        if (val32 > 0) {\r\n            str32 = val32.toString(16);\r\n            a = parseInt(str32.substr(0, 2), 16);\r\n            b = parseInt(str32.substr(2, 2), 16);\r\n            g = parseInt(str32.substr(4, 2), 16);\r\n            r = parseInt(str32.substr(6, 2), 16);\r\n        }\r\n\r\n        return {\r\n            r: r,\r\n            g: g,\r\n            b: b,\r\n            a: a,\r\n        };\r\n    };\r\n\r\n    fileChangedHandler(event) {\r\n        var fileInput = false;\r\n        if (event.target.files[0]) {\r\n            fileInput = true;\r\n        }\r\n        if (fileInput) {\r\n            try {\r\n                Resizer.imageFileResizer(\r\n                    event.target.files[0],\r\n                    556,\r\n                    696,\r\n                    \"JPEG\",\r\n                    100,\r\n                    0,\r\n                    (uri) => {\r\n                        const letters = this.getRandomLetters();\r\n                        this.setState({ backgroundImage: uri, letters: letters });\r\n                    },\r\n                    \"base64\",\r\n                    556,\r\n                    696\r\n                );\r\n                this.setState({ imageLoaded: true });\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n        }\r\n    }\r\n\r\n    getRandomLetter = () => {\r\n        return String.fromCharCode(Math.floor(Math.random() * 26) + 65);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', width: '100%', height: 'auto', flexDirection: 'column', paddingTop: '10px', paddingBottom: '10px', }} className=\"App\">\r\n                <div style={{ marginBottom: '10px' }}>\r\n                    <input type={\"file\"} id={'imageUpload'} name={'imageUpload'} onChange={this.fileChangedHandler} />\r\n                </div>\r\n                <div style={{ display: 'flex' }}>\r\n                    <div className='image' style={{ width: '1000px', height: '1300px', position: 'relative' }}>\r\n                        <div style={{ width: '100%', height: '100%', position: 'absolute' }}>\r\n                            <img alt={\"\"} style={{ width: '1000px', height: '1300px', }} src={this.state.backgroundImage} />\r\n                        </div>\r\n                        <div style={{ width: '100%', height: '100%', position: 'absolute' }}>\r\n                            <div style={{ width: '100%', height: '100%', fontFamily: 'Motiva' }}>\r\n                                <TextLayer letters={this.state.letters} opacity={this.state.opacity} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='image1' style={{ width: '1000px', height: '1300px', position: 'relative', display: `${this.state.loading ? 'block' : 'none'}` }}>\r\n                        <div style={{ width: '100%', height: '100%', position: 'absolute' }}>\r\n                            <img alt={\"\"} style={{ width: '1000px', height: '1300px', }} src={this.state.backgroundImage} />\r\n                        </div>\r\n                        <div style={{ width: '100%', height: '100%', position: 'absolute' }}>\r\n                            <div style={{ width: '100%', height: '100%', fontFamily: 'Motiva' }}>\r\n                                <TextLayer letters={this.state.letters} opacity={this.state.opacity} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='image2' style={{ width: '1000px', height: '1300px', position: 'relative', backgroundColor: 'white', display: `${this.state.loading ? 'block' : 'none'}` }}>\r\n                        <div style={{ width: '100%', height: '100%', position: 'absolute' }}>\r\n                            <div style={{ width: '100%', height: '100%', fontFamily: 'Motiva' }}>\r\n                                <TextLayer letters={this.state.letters} opacity={this.state.opacity} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {\r\n                    this.state.loading && (\r\n                        <div style={{ backgroundColor: 'white', zIndex: 999, position: 'absolute', width: '100%', height: '100%' }}>\r\n                            <div style={{ position: 'absolute', top: '50%', left: '50%', transform: 'translate(-50%, -50%)' }}>\r\n                                <CircularProgress />\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }\r\n                <div style={{ position: 'relative', width: '316px', height: '16px', marginTop: '10px' }}>\r\n                    <AlphaPicker\r\n                        color={{ h: 250, s: 0, l: 0.2, a: this.state.opacity }}\r\n                        onChange={(value) => {\r\n                            const opacity = value.rgb.a;\r\n                            this.setState({ opacity });\r\n                        }}\r\n                    />\r\n                </div>\r\n                <TextField\r\n                    margin='normal'\r\n                    type=\"number\"\r\n                    id=\"outlined-basic\"\r\n                    label=\"Threshhold\"\r\n                    variant=\"outlined\"\r\n                    value={this.state.threshhold}\r\n                    onChange={(event) => {\r\n                        if (event.target.value >= 0 && event.target.value <= 255) {\r\n                            this.setState({ threshhold: event.target.value });\r\n                        }\r\n                    }}\r\n                />\r\n                <div style={{ display: 'flex' }}>\r\n                    <Button\r\n                        style={{ marginRight: 5 }}\r\n                        onClick={async () => {\r\n                            this.setState({ loading: true });\r\n                            const result = await this.blockCellsBelowThreshhold();\r\n                            this.setState({ loading: false, letters: result });\r\n                        }}\r\n                        variant='outlined'\r\n                        disabled={!this.state.imageLoaded}\r\n                    >\r\n                        Block cells\r\n                    </Button>\r\n                    <Button\r\n                        style={{ marginLeft: 5 }}\r\n                        onClick={() => {\r\n                            const result = this.getRandomLetters();\r\n                            this.setState({ letters: result });\r\n                        }}\r\n                        variant='outlined'\r\n                    >\r\n                        Reset\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import './App.css';\r\nimport {AppContainer} from \"./AppContainer\";\r\nimport React from \"react\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n        <AppContainer/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}