{"version":3,"sources":["letterCell.js","LetterColumn.js","textLayer.js","AppContainer.js","App.js","reportWebVitals.js","index.js"],"names":["LetterCell","_React$Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","getRandomLetter","String","fromCharCode","Math","floor","random","getOpacity","useKr","cellBrightness","brightness","opacity","targetBrightness","getBrightness","lightColor","rgb","r","g","b","darkColor","getColor","hex","state","inherits","createClass","key","value","react_default","a","createElement","style","width","height","display","justifyContent","alignItems","color","col","React","Component","LetterColumn","_this2","flexDirection","brightnessColumn","map","index","letterCell_LetterCell","row","fontLightColor","fontDarkColor","TextLayer","flexWrap","className","letters","brightnessMatrix","LetterColumn_LetterColumn","_regeneratorRuntime","exports","Op","prototype","hasOwn","hasOwnProperty","defineProperty","obj","desc","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","AppContainer","getRandomLetters","j","rgbToGrayscale","calcAbsolutePixel","pixel","pixel1","pixel2","abs","blockCellsBelowThreshhold","asyncToGenerator","_callee2","_context2","_ref2","_callee","imageHtml","image1Html","image2Html","imageBase64","image1Base64","image2Base64","imageUrls","_context","document","querySelector","htmlToImage","quality","all","e","img","Image","onload","onerror","src","image","image1","image2","toConsumableArray","canvas","canvas1","canvas2","getContext","context1","context2","drawImage","imageData","getImageData","imageData1","imageData2","currRowPxCount","currColPxCount","belowThreshhold","m","round","n","getPx","absPixel","threshhold","_x","_x2","apply","arguments","processImage","base64","Array","h","cellsContrast","pixels","cellBrightnessAverage","reduce","partialSum","rgb2grayscale","contrastCalc","setState","median","arr","sort","midpoint","x","y","str32","val32","Uint32Array","data","buffer","toString","parseInt","substr","handleChangeFontDarkColor","handleChangeFontLightColor","onTargetBrightnessChange","target","cells","column","cell","fontBrightness","backgroundBrightness","getAverageContrast","fileChangedHandler","bind","assertThisInitialized","selectedItem","backgroundImage","showDarkColorPicker","showLightColorPicker","loading","imageLoaded","event","fileInput","files","Resizer","imageFileResizer","uri","console","log","_this3","marginBottom","id","onChange","position","alt","fontFamily","textLayer_TextLayer","concat","backgroundColor","marginTop","border","onClick","bottom","right","es","disableAlpha","onChangeComplete","min","max","step","zIndex","top","left","transform","CircularProgress","TextField","margin","label","variant","Button","marginRight","_callee3","_context3","disabled","marginLeft","App","AppContainer_AppContainer","reportWebVitals","onPerfEntry","Function","__webpack_require__","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.0f19ff04.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nexport class LetterCell extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    getRandomLetter = () => {\r\n        return String.fromCharCode(Math.floor(Math.random()*26)+65);\r\n    };\r\n\r\n    getOpacity = () => {\r\n        if (this.props.useKr) {\r\n            let cellBrightness = this.props.brightness;\r\n            let targetBrightness = this.props.targetBrightness;\r\n            /*console.log(cellBrightness);\r\n            console.log(targetBrightness);\r\n            console.log((targetBrightness-cellBrightness)/(this.getBrightness()-cellBrightness));*/\r\n            let opacity = (targetBrightness-cellBrightness)/(this.getBrightness()-cellBrightness);\r\n            if (opacity < 0) return 0;\r\n            if (opacity > 1) return 1;\r\n            if (!opacity) return 0;\r\n            return opacity;\r\n        } else {\r\n            return 1;\r\n        }\r\n    };\r\n\r\n    getBrightness = () => {\r\n        let cellBrightness = this.props.brightness;\r\n        let targetBrightness = this.props.targetBrightness;\r\n        if (cellBrightness < targetBrightness) {\r\n            if (this.props.lightColor.rgb) return 0.3*this.props.lightColor.rgb.r+0.587*this.props.lightColor.rgb.g+0.113*this.props.lightColor.rgb.b;\r\n            return 255;\r\n        }\r\n        if (this.props.darkColor.rgb) return 0.3*this.props.darkColor.rgb.r+0.587*this.props.darkColor.rgb.g+0.113*this.props.darkColor.rgb.b;\r\n        return 0;\r\n    };\r\n\r\n    getColor = () => {\r\n        if (this.props.useKr) {\r\n            let cellBrightness = this.props.brightness;\r\n            let targetBrightness = this.props.targetBrightness;\r\n    \r\n            if (cellBrightness < targetBrightness) return this.props.lightColor.hex;\r\n            return this.props.darkColor.hex;\r\n        } else {\r\n            return '#000000'\r\n        }\r\n\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div style={{width: '20px', height:'26px', display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\r\n                <div style={{opacity: this.getOpacity(), color: this.getColor()}}>{this.props.col}</div>\r\n            </div>\r\n\r\n    )\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport {LetterCell} from \"./letterCell\";\r\n\r\n\r\nexport class LetterColumn extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div style={{width: '20px', height:'624px', display: 'flex', flexDirection: 'column'}}>\r\n                {this.props.brightnessColumn && this.props.brightnessColumn.map(((brightness,index) =>  {\r\n                    return <LetterCell useKr={this.props.useKr} col={this.props.row[index]} key={index} brightness={brightness} targetBrightness={this.props.targetBrightness} lightColor={this.props.fontLightColor} darkColor={this.props.fontDarkColor}/>}))\r\n                }\r\n            </div>\r\n\r\n    )\r\n\r\n    }\r\n\r\n}\r\n\r\n","import React from 'react';\r\n\r\nimport {LetterColumn} from \"./LetterColumn\";\r\n\r\n\r\nexport class TextLayer extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div style={{display: 'flex',  flexDirection: 'row', flexWrap: 'wrap'}} className=\"TextContainer\">\r\n                {this.props.letters && this.props.brightnessMatrix && this.props.brightnessMatrix.map(((brightness,index) =>  {\r\n                    return <LetterColumn useKr={this.props.useKr} row={this.props.letters[index]} key={index} brightnessColumn={brightness} targetBrightness={this.props.targetBrightness} fontLightColor={this.props.fontLightColor} fontDarkColor={this.props.fontDarkColor}/>}))\r\n                }\r\n            </div>\r\n    )\r\n\r\n    }\r\n\r\n}\r\n\r\n","import React from 'react';\r\nimport './App.css';\r\nimport './textLayer';\r\nimport { TextLayer } from \"./textLayer\";\r\nimport Resizer from \"react-image-file-resizer\";\r\nimport { ChromePicker } from \"react-color\";\r\nimport * as htmlToImage from \"html-to-image\";\r\nimport { Button, CircularProgress, TextField } from '@mui/material';\r\n\r\nexport class AppContainer extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.fileChangedHandler = this.fileChangedHandler.bind(this);\r\n        this.state = {\r\n            threshhold: 0,\r\n            letters: [],\r\n            selectedItem: 0,\r\n            backgroundImage: null,\r\n            fontDarkColor: { hex: '#000000', rgb: { r: 0, g: 0, b: 0 } },\r\n            fontLightColor: { hex: '#ffffff', rgb: { r: 255, g: 255, b: 255 } },\r\n            showDarkColorPicker: false,\r\n            showLightColorPicker: false,\r\n            targetBrightness: 127,\r\n            loading: false,\r\n            imageLoaded: false,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const letters = this.getRandomLetters();\r\n        this.setState({ fontDarkColor: { hex: '#000000', rgb: { r: 0, g: 0, b: 0 } }, letters: letters });\r\n    }\r\n\r\n    getRandomLetters = () => {\r\n        const letters = []\r\n        for (let i = 0; i < 24; i++) {\r\n            const row = [];\r\n            for (let j = 0; j < 24; j++) {\r\n                row.push(this.getRandomLetter());\r\n            }\r\n            letters.push(row);\r\n        }\r\n        return letters\r\n    }\r\n\r\n    rgbToGrayscale = (r, g, b) => {\r\n        return 0.2126 * r + 0.7152 * g + 0.0722 * b;\r\n    };\r\n\r\n    calcAbsolutePixel = (pixel, pixel1, pixel2) => {\r\n        const absR = Math.abs(Math.abs(pixel.r - pixel1.r) - pixel2.r);\r\n        const absG = Math.abs(Math.abs(pixel.g - pixel1.g) - pixel2.g);\r\n        const absB = Math.abs(Math.abs(pixel.b - pixel1.b) - pixel2.b);\r\n\r\n        return {\r\n            r: absR,\r\n            g: absG,\r\n            b: absB\r\n        };\r\n    };\r\n\r\n    blockCellsBelowThreshhold = async () => {\r\n        return new Promise(async (resolve, reject) => {\r\n            const imageHtml = document.querySelector(\".image\");\r\n            const image1Html = document.querySelector(\".image1\");\r\n            const image2Html = document.querySelector(\".image2\");\r\n\r\n            const imageBase64 = await htmlToImage.toPng(imageHtml, { quality: 1 });\r\n            const image1Base64 = await htmlToImage.toPng(image1Html, { quality: 1 });\r\n            const image2Base64 = await htmlToImage.toPng(image2Html, { quality: 1 });\r\n\r\n            const imageUrls = [imageBase64, image1Base64, image2Base64];\r\n\r\n            Promise.all(imageUrls.map(e =>\r\n                new Promise((resolve, reject) => {\r\n                    const img = new Image();\r\n                    img.onload = () => resolve(img);\r\n                    img.onerror = reject;\r\n                    img.src = e;\r\n                })\r\n            )).then((result) => {\r\n                const image = result[0];\r\n                const image1 = result[1];\r\n                const image2 = result[2];\r\n                let letters = [...this.state.letters];\r\n                const height = 624;\r\n                const width = 480;\r\n                const padding = 0;\r\n                const cellPxHeight = (height - (padding * 2)) / 24;\r\n                const cellPxWidth = (width - (padding * 2)) / 24;\r\n\r\n                const canvas = document.createElement('canvas');\r\n                const canvas1 = document.createElement('canvas');\r\n                const canvas2 = document.createElement('canvas');\r\n\r\n                canvas.width = width;\r\n                canvas.height = height;\r\n\r\n                canvas1.width = width;\r\n                canvas1.height = height;\r\n\r\n                canvas2.width = width;\r\n                canvas2.height = height;\r\n\r\n                const context = canvas.getContext('2d');\r\n                const context1 = canvas1.getContext('2d');\r\n                const context2 = canvas2.getContext('2d');\r\n\r\n                context.drawImage(image, 0, 0, width, height);\r\n                context1.drawImage(image1, 0, 0, width, height);\r\n                context2.drawImage(image2, 0, 0, width, height);\r\n\r\n                const imageData = context.getImageData(0, 0, canvas.width, canvas.height);\r\n                const imageData1 = context1.getImageData(0, 0, canvas1.width, canvas1.height);\r\n                const imageData2 = context2.getImageData(0, 0, canvas2.width, canvas2.height);\r\n\r\n                let currRowPxCount = padding;\r\n                let currColPxCount = padding;\r\n                \r\n                for (let row = 0; row < 24; row++) {\r\n                    for (let col = 0; col < 24; col++) {\r\n                        let belowThreshhold = false;\r\n                        for (let m = 0; m < Math.round(cellPxWidth); m++) {\r\n                            for (let n = 0; n < Math.round(cellPxHeight); n++) {\r\n                                const pixel = this.getPx(imageData, Math.round(currRowPxCount + m), Math.round(currColPxCount + n));\r\n                                const pixel1 = this.getPx(imageData1, Math.round(currRowPxCount + m), Math.round(currColPxCount + n));\r\n                                const pixel2 = this.getPx(imageData2, Math.round(currRowPxCount + m), Math.round(currColPxCount + n));\r\n\r\n                                if ((pixel2.r !== 0 && pixel2.g !== 0 && pixel2.b !== 0) && (pixel2.r !== 255 && pixel2.g !== 255 && pixel2.b !== 255)) {\r\n                                    if (pixel2.r > 100) {\r\n                                        pixel2.r = 255;\r\n                                        pixel2.g = 255;\r\n                                        pixel2.b = 255;\r\n                                    } else {\r\n                                        pixel2.r = 0;\r\n                                        pixel2.g = 0;\r\n                                        pixel2.b = 0;\r\n                                    }\r\n                                }\r\n\r\n                                const absPixel = this.calcAbsolutePixel(pixel, pixel1, pixel2);\r\n\r\n                                const grayscale = this.rgbToGrayscale(absPixel.r, absPixel.g, absPixel.b);\r\n\r\n                                if (grayscale <= this.state.threshhold) {\r\n                                    belowThreshhold = true;\r\n                                    letters[row][col] = '`';\r\n                                    break;\r\n                                }\r\n                            }\r\n                            if (belowThreshhold) {\r\n                                break;\r\n                            }\r\n                        }\r\n                        currRowPxCount += cellPxWidth;\r\n                    }\r\n                    currRowPxCount = padding;\r\n                    currColPxCount += cellPxHeight;\r\n                }\r\n\r\n                resolve(letters);\r\n            }).catch(() => {\r\n                reject();\r\n            });\r\n        })\r\n    };\r\n\r\n    processImage = (base64) => {\r\n\r\n        let brightnessMatrix = new Array(24);\r\n        for (var h = 0; h < brightnessMatrix.length; h++) {\r\n            brightnessMatrix[h] = new Array(24);\r\n        }\r\n\r\n        var image = new Image();\r\n        image.src = base64;\r\n        image.onload = () => {\r\n\r\n            var canvas = document.createElement('canvas');\r\n            canvas.width = image.width;\r\n            canvas.height = image.height;\r\n            var context = canvas.getContext('2d');\r\n            context.drawImage(image, 0, 0, 556, 696);\r\n            let cellsContrast = [];\r\n            var imageData = context.getImageData(38, 34, canvas.width - 76, canvas.height - 72);\r\n            for (let i = 0; i < 480; i = i + 20) {\r\n                for (let j = 0; j < 624; j = j + 26) {\r\n                    // analyzing a cell (getting average grayscale value of cell)\r\n                    var pixels = [];\r\n                    for (let m = 0; m < 20; m++) {\r\n                        for (let n = 0; n < 26; n++) {\r\n                            pixels.push(this.getPx(imageData, i + m, j + n));\r\n\r\n                        }\r\n                    }\r\n                    let cellBrightnessAverage = pixels.reduce((partialSum, pixel) => partialSum + this.rgb2grayscale(pixel.r, pixel.g, pixel.b), 0) / pixels.length;\r\n\r\n                    brightnessMatrix[Math.floor(i / 20)][Math.floor(j / 26)] = cellBrightnessAverage;\r\n                    cellsContrast.push(this.contrastCalc(this.state.targetBrightness, cellBrightnessAverage));\r\n                }\r\n            }\r\n            this.setState({ brightnessMatrix: brightnessMatrix, cellsContrast: cellsContrast });\r\n        }\r\n    };\r\n\r\n    median = (arr) => {\r\n        if (arr.length === 0) {\r\n            return; // 0.\r\n        }\r\n        arr.sort((a, b) => a - b); // 1.\r\n        const midpoint = Math.floor(arr.length / 2); // 2.\r\n        return arr.length % 2 === 1 ?\r\n            arr[midpoint] : // 3.1. If odd length, just take midpoint\r\n            (arr[midpoint - 1] + arr[midpoint]) / 2; // 3.2. If even length, take median of midpoints\r\n    };\r\n\r\n    getPx = (imageData, x, y) => {\r\n        var data32 = new Uint32Array(imageData.data.buffer),\r\n            val32 = data32[y * imageData.width + x],\r\n            str32,\r\n            a = 0,\r\n            b = 0,\r\n            g = 0,\r\n            r = 0;\r\n\r\n        if (val32 > 0) {\r\n            str32 = val32.toString(16);\r\n            a = parseInt(str32.substr(0, 2), 16);\r\n            b = parseInt(str32.substr(2, 2), 16);\r\n            g = parseInt(str32.substr(4, 2), 16);\r\n            r = parseInt(str32.substr(6, 2), 16);\r\n        }\r\n\r\n        return {\r\n            r: r,\r\n            g: g,\r\n            b: b,\r\n            a: a,\r\n        };\r\n    };\r\n\r\n    rgb2grayscale = (r, g, b) => { return 0.3 * r + 0.587 * g + 0.113 * b };\r\n\r\n    fileChangedHandler(event) {\r\n        var fileInput = false;\r\n        if (event.target.files[0]) {\r\n            fileInput = true;\r\n        }\r\n        if (fileInput) {\r\n            try {\r\n                Resizer.imageFileResizer(\r\n                    event.target.files[0],\r\n                    556,\r\n                    696,\r\n                    \"JPEG\",\r\n                    100,\r\n                    0,\r\n                    (uri) => {\r\n                        this.setState({ backgroundImage: uri });\r\n                        this.processImage(uri);\r\n                    },\r\n                    \"base64\",\r\n                    556,\r\n                    696\r\n                );\r\n                this.setState({ imageLoaded: true });\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n        }\r\n    }\r\n\r\n    handleChangeFontDarkColor = (color) => {\r\n        this.setState({ fontDarkColor: color });\r\n    };\r\n\r\n    handleChangeFontLightColor = (color) => {\r\n        this.setState({ fontLightColor: color });\r\n    };\r\n\r\n    onTargetBrightnessChange = (e) => {\r\n        let targetBrightness = e.target.value;\r\n        let cellsContrast = [];\r\n        let cells = this.state.brightnessMatrix;\r\n\r\n        if (cells) {\r\n            cells.forEach(column => {\r\n                column.forEach(cell => {\r\n                    cellsContrast.push(this.contrastCalc(targetBrightness, cell))\r\n                })\r\n            });\r\n        }\r\n\r\n        this.setState({ cellsContrast: cellsContrast, targetBrightness: targetBrightness });\r\n    };\r\n\r\n    contrastCalc = (fontBrightness, backgroundBrightness) => {\r\n        if (fontBrightness > backgroundBrightness) return ((fontBrightness / 255 + 0.05) / (backgroundBrightness / 255 + 0.05));\r\n        return ((backgroundBrightness / 255 + 0.05) / (fontBrightness / 255 + 0.05));\r\n    };\r\n\r\n    getAverageContrast = () => {\r\n        let cellsContrast = this.state.cellsContrast;\r\n        return cellsContrast && Math.round(cellsContrast.reduce((partialSum, a) => partialSum + a, 0) / cellsContrast.length * 1000) / 1000;\r\n    };\r\n\r\n    getRandomLetter = () => {\r\n        return String.fromCharCode(Math.floor(Math.random() * 26) + 65);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', width: '100%', height: '100%', flexDirection: 'column' }} className=\"App\">\r\n                <div style={{ marginBottom: '10px' }}>\r\n                    <input type={\"file\"} id={'imageUpload'} name={'imageUpload'} onChange={this.fileChangedHandler} />\r\n                </div>\r\n                <div style={{ display: 'flex' }}>\r\n                    <div className='image' style={{ width: '480px', height: '624px', position: 'relative' }}>\r\n                        <div style={{ width: '100%', height: '100%', position: 'absolute' }}>\r\n                            <img alt={\"\"} style={{ width: '480px', height: '624px' }} src={this.state.backgroundImage} />\r\n                        </div>\r\n                        <div style={{ width: '100%', height: '100%', position: 'absolute' }}>\r\n                            <div style={{ width: '100%', height: '100%', fontFamily: 'Motiva' }}>\r\n                                <TextLayer useKr={true} letters={this.state.letters} brightnessMatrix={this.state.brightnessMatrix} targetBrightness={this.state.targetBrightness} fontLightColor={this.state.fontLightColor} fontDarkColor={this.state.fontDarkColor} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='image1' style={{ width: '480px', height: '624px', position: 'relative', display: `${this.state.loading ? 'block' : 'none'}` }}>\r\n                        <div style={{ width: '100%', height: '100%', position: 'absolute' }}>\r\n                            <img alt={\"\"} style={{ width: '480px', height: '624px' }} src={this.state.backgroundImage} />\r\n                        </div>\r\n                        <div style={{ width: '100%', height: '100%', position: 'absolute' }}>\r\n                            <div style={{ width: '100%', height: '100%', fontFamily: 'Motiva' }}>\r\n                                <TextLayer letters={this.state.letters} brightnessMatrix={this.state.brightnessMatrix} targetBrightness={this.state.targetBrightness} fontLightColor={this.state.fontLightColor} fontDarkColor={this.state.fontDarkColor} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='image2' style={{ width: '480px', height: '624px', position: 'relative', backgroundColor: 'white', display: `${this.state.loading ? 'block' : 'none'}` }}>\r\n                        <div style={{ width: '100%', height: '100%', position: 'absolute' }}>\r\n                            <div style={{ width: '100%', height: '100%', fontFamily: 'Motiva' }}>\r\n                                <TextLayer letters={this.state.letters} brightnessMatrix={this.state.brightnessMatrix} targetBrightness={this.state.targetBrightness} fontLightColor={this.state.fontLightColor} fontDarkColor={this.state.fontDarkColor} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div style={{ width: '100%', display: 'flex', alignItems: 'center', flexDirection: 'column', marginTop: '20px' }}>\r\n                    <div style={{ width: '100%', display: 'flex', alignItems: 'center', flexDirection: 'row-reverse', justifyContent: 'center' }}>\r\n                        <div style={{ width: '20px', height: '20px', border: '1px solid', backgroundColor: this.state.fontLightColor.hex }} onClick={() => { this.setState({ showLightColorPicker: !this.state.showLightColorPicker, showDarkColorPicker: false }) }}>\r\n                        </div>\r\n                        <div style={{ position: 'fixed', bottom: '10px', right: '10px' }}>\r\n                            {this.state.showLightColorPicker ? <ChromePicker width={'200px'} height={'200px'} disableAlpha={true} color={this.state.fontLightColor} onChangeComplete={this.handleChangeFontLightColor} /> : null}\r\n                        </div>\r\n                        <div>\r\n                            <input style={{ width: '500px' }}\r\n                                type='range'\r\n                                onChange={this.onTargetBrightnessChange}\r\n                                min={0}\r\n                                max={255}\r\n                                step={1}\r\n                                value={this.state.targetBrightness}\r\n                                className='custom-slider'>\r\n                            </input>\r\n                        </div>\r\n\r\n                        <div style={{ width: '20px', height: '20px', border: '1px solid', backgroundColor: this.state.fontDarkColor.hex }} onClick={() => { this.setState({ showDarkColorPicker: !this.state.showDarkColorPicker, showLightColorPicker: false }) }}>\r\n                        </div>\r\n                        <div style={{ position: 'fixed', bottom: '10px', right: '10px' }}>\r\n                            {this.state.showDarkColorPicker ? <ChromePicker width={'200px'} height={'200px'} disableAlpha={true} color={this.state.fontDarkColor} onChangeComplete={this.handleChangeFontDarkColor} /> : null}\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div>\r\n                        {this.state.targetBrightness} <b>Kr</b>\r\n                    </div>\r\n                    <div>\r\n                        {this.getAverageContrast() ? 'Average Contrast: ' + this.getAverageContrast() : ''}\r\n                    </div>\r\n                </div>\r\n                {\r\n                    this.state.loading && (\r\n                        <div style={{ backgroundColor: 'white', zIndex: 999, position: 'absolute', width: '100%', height: '100%' }}>\r\n                            <div style={{ position: 'absolute', top: '50%', left: '50%', transform: 'translate(-50%, -50%)' }}>\r\n                                <CircularProgress />\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }\r\n                <TextField\r\n                    margin='normal'\r\n                    type=\"number\"\r\n                    id=\"outlined-basic\"\r\n                    label=\"Threshhold\"\r\n                    variant=\"outlined\"\r\n                    value={this.state.threshhold}\r\n                    onChange={(event) => {\r\n                        if (event.target.value >= 0 && event.target.value <= 255) {\r\n                            this.setState({ threshhold: event.target.value });\r\n                        }\r\n                    }}\r\n                />\r\n                <div style={{ display: 'flex' }}>\r\n                    <Button\r\n                        style={{ marginRight: 5 }}\r\n                        onClick={async () => {\r\n                            this.setState({ loading: true });\r\n                            const result = await this.blockCellsBelowThreshhold();\r\n                            this.setState({ loading: false, letters: result });\r\n                        }}\r\n                        variant='outlined'\r\n                        disabled={!this.state.imageLoaded}\r\n                    >\r\n                        Block cells\r\n                    </Button>\r\n                    <Button\r\n                        style={{ marginLeft: 5 }}\r\n                        onClick={() => {\r\n                            const result = this.getRandomLetters();\r\n                            this.setState({ letters: result });\r\n                        }}\r\n                        variant='outlined'\r\n                    >\r\n                        Reset\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import './App.css';\r\nimport {AppContainer} from \"./AppContainer\";\r\nimport React from \"react\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n        <AppContainer/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}